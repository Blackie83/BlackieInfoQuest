//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InfoQuestForm.App_Print.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet_Form_HAI_Site")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet_Form_HAI_Site : global::System.Data.DataSet {
        
        private Form_HAI_HeaderDataTable tableForm_HAI_Header;
        
        private Form_HAI_SiteDataTable tableForm_HAI_Site;
        
        private Form_HAI_InfectionDetailDataTable tableForm_HAI_InfectionDetail;
        
        private Form_HAI_PredisposingConditionDataTable tableForm_HAI_PredisposingCondition;
        
        private Form_HAI_BedHistoryDataTable tableForm_HAI_BedHistory;
        
        private Form_HAI_TPN_ENTDataTable tableForm_HAI_TPN_ENT;
        
        private Form_HAI_AntibioticDataTable tableForm_HAI_Antibiotic;
        
        private Form_HAI_BundleComplianceDataTable tableForm_HAI_BundleCompliance;
        
        private Form_HAI_ReportableDiseasesDataTable tableForm_HAI_ReportableDiseases;
        
        private Form_HAI_LabReportsDataTable tableForm_HAI_LabReports;
        
        private Form_HAI_SurgeryDetailsDataTable tableForm_HAI_SurgeryDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet_Form_HAI_Site() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet_Form_HAI_Site(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Form_HAI_Header"] != null)) {
                    base.Tables.Add(new Form_HAI_HeaderDataTable(ds.Tables["Form_HAI_Header"]));
                }
                if ((ds.Tables["Form_HAI_Site"] != null)) {
                    base.Tables.Add(new Form_HAI_SiteDataTable(ds.Tables["Form_HAI_Site"]));
                }
                if ((ds.Tables["Form_HAI_InfectionDetail"] != null)) {
                    base.Tables.Add(new Form_HAI_InfectionDetailDataTable(ds.Tables["Form_HAI_InfectionDetail"]));
                }
                if ((ds.Tables["Form_HAI_PredisposingCondition"] != null)) {
                    base.Tables.Add(new Form_HAI_PredisposingConditionDataTable(ds.Tables["Form_HAI_PredisposingCondition"]));
                }
                if ((ds.Tables["Form_HAI_BedHistory"] != null)) {
                    base.Tables.Add(new Form_HAI_BedHistoryDataTable(ds.Tables["Form_HAI_BedHistory"]));
                }
                if ((ds.Tables["Form_HAI_TPN_ENT"] != null)) {
                    base.Tables.Add(new Form_HAI_TPN_ENTDataTable(ds.Tables["Form_HAI_TPN_ENT"]));
                }
                if ((ds.Tables["Form_HAI_Antibiotic"] != null)) {
                    base.Tables.Add(new Form_HAI_AntibioticDataTable(ds.Tables["Form_HAI_Antibiotic"]));
                }
                if ((ds.Tables["Form_HAI_BundleCompliance"] != null)) {
                    base.Tables.Add(new Form_HAI_BundleComplianceDataTable(ds.Tables["Form_HAI_BundleCompliance"]));
                }
                if ((ds.Tables["Form_HAI_ReportableDiseases"] != null)) {
                    base.Tables.Add(new Form_HAI_ReportableDiseasesDataTable(ds.Tables["Form_HAI_ReportableDiseases"]));
                }
                if ((ds.Tables["Form_HAI_LabReports"] != null)) {
                    base.Tables.Add(new Form_HAI_LabReportsDataTable(ds.Tables["Form_HAI_LabReports"]));
                }
                if ((ds.Tables["Form_HAI_SurgeryDetails"] != null)) {
                    base.Tables.Add(new Form_HAI_SurgeryDetailsDataTable(ds.Tables["Form_HAI_SurgeryDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_HeaderDataTable Form_HAI_Header {
            get {
                return this.tableForm_HAI_Header;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_SiteDataTable Form_HAI_Site {
            get {
                return this.tableForm_HAI_Site;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_InfectionDetailDataTable Form_HAI_InfectionDetail {
            get {
                return this.tableForm_HAI_InfectionDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_PredisposingConditionDataTable Form_HAI_PredisposingCondition {
            get {
                return this.tableForm_HAI_PredisposingCondition;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_BedHistoryDataTable Form_HAI_BedHistory {
            get {
                return this.tableForm_HAI_BedHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_TPN_ENTDataTable Form_HAI_TPN_ENT {
            get {
                return this.tableForm_HAI_TPN_ENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_AntibioticDataTable Form_HAI_Antibiotic {
            get {
                return this.tableForm_HAI_Antibiotic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_BundleComplianceDataTable Form_HAI_BundleCompliance {
            get {
                return this.tableForm_HAI_BundleCompliance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_ReportableDiseasesDataTable Form_HAI_ReportableDiseases {
            get {
                return this.tableForm_HAI_ReportableDiseases;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_LabReportsDataTable Form_HAI_LabReports {
            get {
                return this.tableForm_HAI_LabReports;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Form_HAI_SurgeryDetailsDataTable Form_HAI_SurgeryDetails {
            get {
                return this.tableForm_HAI_SurgeryDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet_Form_HAI_Site cln = ((DataSet_Form_HAI_Site)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Form_HAI_Header"] != null)) {
                    base.Tables.Add(new Form_HAI_HeaderDataTable(ds.Tables["Form_HAI_Header"]));
                }
                if ((ds.Tables["Form_HAI_Site"] != null)) {
                    base.Tables.Add(new Form_HAI_SiteDataTable(ds.Tables["Form_HAI_Site"]));
                }
                if ((ds.Tables["Form_HAI_InfectionDetail"] != null)) {
                    base.Tables.Add(new Form_HAI_InfectionDetailDataTable(ds.Tables["Form_HAI_InfectionDetail"]));
                }
                if ((ds.Tables["Form_HAI_PredisposingCondition"] != null)) {
                    base.Tables.Add(new Form_HAI_PredisposingConditionDataTable(ds.Tables["Form_HAI_PredisposingCondition"]));
                }
                if ((ds.Tables["Form_HAI_BedHistory"] != null)) {
                    base.Tables.Add(new Form_HAI_BedHistoryDataTable(ds.Tables["Form_HAI_BedHistory"]));
                }
                if ((ds.Tables["Form_HAI_TPN_ENT"] != null)) {
                    base.Tables.Add(new Form_HAI_TPN_ENTDataTable(ds.Tables["Form_HAI_TPN_ENT"]));
                }
                if ((ds.Tables["Form_HAI_Antibiotic"] != null)) {
                    base.Tables.Add(new Form_HAI_AntibioticDataTable(ds.Tables["Form_HAI_Antibiotic"]));
                }
                if ((ds.Tables["Form_HAI_BundleCompliance"] != null)) {
                    base.Tables.Add(new Form_HAI_BundleComplianceDataTable(ds.Tables["Form_HAI_BundleCompliance"]));
                }
                if ((ds.Tables["Form_HAI_ReportableDiseases"] != null)) {
                    base.Tables.Add(new Form_HAI_ReportableDiseasesDataTable(ds.Tables["Form_HAI_ReportableDiseases"]));
                }
                if ((ds.Tables["Form_HAI_LabReports"] != null)) {
                    base.Tables.Add(new Form_HAI_LabReportsDataTable(ds.Tables["Form_HAI_LabReports"]));
                }
                if ((ds.Tables["Form_HAI_SurgeryDetails"] != null)) {
                    base.Tables.Add(new Form_HAI_SurgeryDetailsDataTable(ds.Tables["Form_HAI_SurgeryDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableForm_HAI_Header = ((Form_HAI_HeaderDataTable)(base.Tables["Form_HAI_Header"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_Header != null)) {
                    this.tableForm_HAI_Header.InitVars();
                }
            }
            this.tableForm_HAI_Site = ((Form_HAI_SiteDataTable)(base.Tables["Form_HAI_Site"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_Site != null)) {
                    this.tableForm_HAI_Site.InitVars();
                }
            }
            this.tableForm_HAI_InfectionDetail = ((Form_HAI_InfectionDetailDataTable)(base.Tables["Form_HAI_InfectionDetail"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_InfectionDetail != null)) {
                    this.tableForm_HAI_InfectionDetail.InitVars();
                }
            }
            this.tableForm_HAI_PredisposingCondition = ((Form_HAI_PredisposingConditionDataTable)(base.Tables["Form_HAI_PredisposingCondition"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_PredisposingCondition != null)) {
                    this.tableForm_HAI_PredisposingCondition.InitVars();
                }
            }
            this.tableForm_HAI_BedHistory = ((Form_HAI_BedHistoryDataTable)(base.Tables["Form_HAI_BedHistory"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_BedHistory != null)) {
                    this.tableForm_HAI_BedHistory.InitVars();
                }
            }
            this.tableForm_HAI_TPN_ENT = ((Form_HAI_TPN_ENTDataTable)(base.Tables["Form_HAI_TPN_ENT"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_TPN_ENT != null)) {
                    this.tableForm_HAI_TPN_ENT.InitVars();
                }
            }
            this.tableForm_HAI_Antibiotic = ((Form_HAI_AntibioticDataTable)(base.Tables["Form_HAI_Antibiotic"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_Antibiotic != null)) {
                    this.tableForm_HAI_Antibiotic.InitVars();
                }
            }
            this.tableForm_HAI_BundleCompliance = ((Form_HAI_BundleComplianceDataTable)(base.Tables["Form_HAI_BundleCompliance"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_BundleCompliance != null)) {
                    this.tableForm_HAI_BundleCompliance.InitVars();
                }
            }
            this.tableForm_HAI_ReportableDiseases = ((Form_HAI_ReportableDiseasesDataTable)(base.Tables["Form_HAI_ReportableDiseases"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_ReportableDiseases != null)) {
                    this.tableForm_HAI_ReportableDiseases.InitVars();
                }
            }
            this.tableForm_HAI_LabReports = ((Form_HAI_LabReportsDataTable)(base.Tables["Form_HAI_LabReports"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_LabReports != null)) {
                    this.tableForm_HAI_LabReports.InitVars();
                }
            }
            this.tableForm_HAI_SurgeryDetails = ((Form_HAI_SurgeryDetailsDataTable)(base.Tables["Form_HAI_SurgeryDetails"]));
            if ((initTable == true)) {
                if ((this.tableForm_HAI_SurgeryDetails != null)) {
                    this.tableForm_HAI_SurgeryDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet_Form_HAI_Site";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet_Form_HAI_Site.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableForm_HAI_Header = new Form_HAI_HeaderDataTable();
            base.Tables.Add(this.tableForm_HAI_Header);
            this.tableForm_HAI_Site = new Form_HAI_SiteDataTable();
            base.Tables.Add(this.tableForm_HAI_Site);
            this.tableForm_HAI_InfectionDetail = new Form_HAI_InfectionDetailDataTable();
            base.Tables.Add(this.tableForm_HAI_InfectionDetail);
            this.tableForm_HAI_PredisposingCondition = new Form_HAI_PredisposingConditionDataTable();
            base.Tables.Add(this.tableForm_HAI_PredisposingCondition);
            this.tableForm_HAI_BedHistory = new Form_HAI_BedHistoryDataTable();
            base.Tables.Add(this.tableForm_HAI_BedHistory);
            this.tableForm_HAI_TPN_ENT = new Form_HAI_TPN_ENTDataTable();
            base.Tables.Add(this.tableForm_HAI_TPN_ENT);
            this.tableForm_HAI_Antibiotic = new Form_HAI_AntibioticDataTable();
            base.Tables.Add(this.tableForm_HAI_Antibiotic);
            this.tableForm_HAI_BundleCompliance = new Form_HAI_BundleComplianceDataTable();
            base.Tables.Add(this.tableForm_HAI_BundleCompliance);
            this.tableForm_HAI_ReportableDiseases = new Form_HAI_ReportableDiseasesDataTable();
            base.Tables.Add(this.tableForm_HAI_ReportableDiseases);
            this.tableForm_HAI_LabReports = new Form_HAI_LabReportsDataTable();
            base.Tables.Add(this.tableForm_HAI_LabReports);
            this.tableForm_HAI_SurgeryDetails = new Form_HAI_SurgeryDetailsDataTable();
            base.Tables.Add(this.tableForm_HAI_SurgeryDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_Header() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_Site() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_InfectionDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_PredisposingCondition() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_BedHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_TPN_ENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_Antibiotic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_BundleCompliance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_ReportableDiseases() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_LabReports() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForm_HAI_SurgeryDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_HeaderRowChangeEventHandler(object sender, Form_HAI_HeaderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_SiteRowChangeEventHandler(object sender, Form_HAI_SiteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_InfectionDetailRowChangeEventHandler(object sender, Form_HAI_InfectionDetailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_PredisposingConditionRowChangeEventHandler(object sender, Form_HAI_PredisposingConditionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_BedHistoryRowChangeEventHandler(object sender, Form_HAI_BedHistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_TPN_ENTRowChangeEventHandler(object sender, Form_HAI_TPN_ENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_AntibioticRowChangeEventHandler(object sender, Form_HAI_AntibioticRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_BundleComplianceRowChangeEventHandler(object sender, Form_HAI_BundleComplianceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_ReportableDiseasesRowChangeEventHandler(object sender, Form_HAI_ReportableDiseasesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_LabReportsRowChangeEventHandler(object sender, Form_HAI_LabReportsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Form_HAI_SurgeryDetailsRowChangeEventHandler(object sender, Form_HAI_SurgeryDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_HeaderDataTable : global::System.Data.TypedTableBase<Form_HAI_HeaderRow> {
            
            private global::System.Data.DataColumn columnFacilityDisplayName;
            
            private global::System.Data.DataColumn columnsReportNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderDataTable() {
                this.TableName = "Form_HAI_Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_HeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_HeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FacilityDisplayNameColumn {
                get {
                    return this.columnFacilityDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sReportNumberColumn {
                get {
                    return this.columnsReportNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderRow this[int index] {
                get {
                    return ((Form_HAI_HeaderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_HeaderRowChangeEventHandler Form_HAI_HeaderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_HeaderRowChangeEventHandler Form_HAI_HeaderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_HeaderRowChangeEventHandler Form_HAI_HeaderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_HeaderRowChangeEventHandler Form_HAI_HeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_HeaderRow(Form_HAI_HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderRow AddForm_HAI_HeaderRow(string FacilityDisplayName, string sReportNumber) {
                Form_HAI_HeaderRow rowForm_HAI_HeaderRow = ((Form_HAI_HeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FacilityDisplayName,
                        sReportNumber};
                rowForm_HAI_HeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_HeaderRow);
                return rowForm_HAI_HeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_HeaderDataTable cln = ((Form_HAI_HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_HeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFacilityDisplayName = base.Columns["FacilityDisplayName"];
                this.columnsReportNumber = base.Columns["sReportNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFacilityDisplayName = new global::System.Data.DataColumn("FacilityDisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilityDisplayName);
                this.columnsReportNumber = new global::System.Data.DataColumn("sReportNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsReportNumber);
                this.columnFacilityDisplayName.ReadOnly = true;
                this.columnFacilityDisplayName.MaxLength = 253;
                this.columnsReportNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderRow NewForm_HAI_HeaderRow() {
                return ((Form_HAI_HeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_HeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_HeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_HeaderRowChanged != null)) {
                    this.Form_HAI_HeaderRowChanged(this, new Form_HAI_HeaderRowChangeEvent(((Form_HAI_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_HeaderRowChanging != null)) {
                    this.Form_HAI_HeaderRowChanging(this, new Form_HAI_HeaderRowChangeEvent(((Form_HAI_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_HeaderRowDeleted != null)) {
                    this.Form_HAI_HeaderRowDeleted(this, new Form_HAI_HeaderRowChangeEvent(((Form_HAI_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_HeaderRowDeleting != null)) {
                    this.Form_HAI_HeaderRowDeleting(this, new Form_HAI_HeaderRowChangeEvent(((Form_HAI_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_HeaderRow(Form_HAI_HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_SiteDataTable : global::System.Data.TypedTableBase<Form_HAI_SiteRow> {
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteDataTable() {
                this.TableName = "Form_HAI_Site";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_SiteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_SiteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteRow this[int index] {
                get {
                    return ((Form_HAI_SiteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SiteRowChangeEventHandler Form_HAI_SiteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SiteRowChangeEventHandler Form_HAI_SiteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SiteRowChangeEventHandler Form_HAI_SiteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SiteRowChangeEventHandler Form_HAI_SiteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_SiteRow(Form_HAI_SiteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteRow AddForm_HAI_SiteRow(int iSiteNumber) {
                Form_HAI_SiteRow rowForm_HAI_SiteRow = ((Form_HAI_SiteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        iSiteNumber};
                rowForm_HAI_SiteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_SiteRow);
                return rowForm_HAI_SiteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_SiteDataTable cln = ((Form_HAI_SiteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_SiteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columniSiteNumber = base.Columns["iSiteNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columniSiteNumber.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteRow NewForm_HAI_SiteRow() {
                return ((Form_HAI_SiteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_SiteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_SiteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_SiteRowChanged != null)) {
                    this.Form_HAI_SiteRowChanged(this, new Form_HAI_SiteRowChangeEvent(((Form_HAI_SiteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_SiteRowChanging != null)) {
                    this.Form_HAI_SiteRowChanging(this, new Form_HAI_SiteRowChangeEvent(((Form_HAI_SiteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_SiteRowDeleted != null)) {
                    this.Form_HAI_SiteRowDeleted(this, new Form_HAI_SiteRowChangeEvent(((Form_HAI_SiteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_SiteRowDeleting != null)) {
                    this.Form_HAI_SiteRowDeleting(this, new Form_HAI_SiteRowChangeEvent(((Form_HAI_SiteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_SiteRow(Form_HAI_SiteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_SiteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_InfectionDetailDataTable : global::System.Data.TypedTableBase<Form_HAI_InfectionDetailRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnfkiFacilityUnitID;
            
            private global::System.Data.DataColumn columnUnit_Name;
            
            private global::System.Data.DataColumn columndtReported;
            
            private global::System.Data.DataColumn columnfkiInfectionTypeID;
            
            private global::System.Data.DataColumn columnInfectionTypeName;
            
            private global::System.Data.DataColumn columnfkiInfectionSubTypeID;
            
            private global::System.Data.DataColumn columnInfectionSubTypeName;
            
            private global::System.Data.DataColumn columnfkiSeverityTypeID;
            
            private global::System.Data.DataColumn columnsDescription;
            
            private global::System.Data.DataColumn columnInfectionPrevention_SiteDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailDataTable() {
                this.TableName = "Form_HAI_InfectionDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_InfectionDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_InfectionDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiFacilityUnitIDColumn {
                get {
                    return this.columnfkiFacilityUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unit_NameColumn {
                get {
                    return this.columnUnit_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtReportedColumn {
                get {
                    return this.columndtReported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionTypeIDColumn {
                get {
                    return this.columnfkiInfectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfectionTypeNameColumn {
                get {
                    return this.columnInfectionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionSubTypeIDColumn {
                get {
                    return this.columnfkiInfectionSubTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfectionSubTypeNameColumn {
                get {
                    return this.columnInfectionSubTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiSeverityTypeIDColumn {
                get {
                    return this.columnfkiSeverityTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDescriptionColumn {
                get {
                    return this.columnsDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfectionPrevention_SiteDescriptionColumn {
                get {
                    return this.columnInfectionPrevention_SiteDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailRow this[int index] {
                get {
                    return ((Form_HAI_InfectionDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_InfectionDetailRowChangeEventHandler Form_HAI_InfectionDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_InfectionDetailRowChangeEventHandler Form_HAI_InfectionDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_InfectionDetailRowChangeEventHandler Form_HAI_InfectionDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_InfectionDetailRowChangeEventHandler Form_HAI_InfectionDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_InfectionDetailRow(Form_HAI_InfectionDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailRow AddForm_HAI_InfectionDetailRow(int fkiInfectionFormID, int iSiteNumber, int fkiFacilityUnitID, string Unit_Name, System.DateTime dtReported, int fkiInfectionTypeID, string InfectionTypeName, int fkiInfectionSubTypeID, string InfectionSubTypeName, int fkiSeverityTypeID, string sDescription, string InfectionPrevention_SiteDescription) {
                Form_HAI_InfectionDetailRow rowForm_HAI_InfectionDetailRow = ((Form_HAI_InfectionDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        fkiFacilityUnitID,
                        Unit_Name,
                        dtReported,
                        fkiInfectionTypeID,
                        InfectionTypeName,
                        fkiInfectionSubTypeID,
                        InfectionSubTypeName,
                        fkiSeverityTypeID,
                        sDescription,
                        InfectionPrevention_SiteDescription};
                rowForm_HAI_InfectionDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_InfectionDetailRow);
                return rowForm_HAI_InfectionDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_InfectionDetailDataTable cln = ((Form_HAI_InfectionDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_InfectionDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnfkiFacilityUnitID = base.Columns["fkiFacilityUnitID"];
                this.columnUnit_Name = base.Columns["Unit_Name"];
                this.columndtReported = base.Columns["dtReported"];
                this.columnfkiInfectionTypeID = base.Columns["fkiInfectionTypeID"];
                this.columnInfectionTypeName = base.Columns["InfectionTypeName"];
                this.columnfkiInfectionSubTypeID = base.Columns["fkiInfectionSubTypeID"];
                this.columnInfectionSubTypeName = base.Columns["InfectionSubTypeName"];
                this.columnfkiSeverityTypeID = base.Columns["fkiSeverityTypeID"];
                this.columnsDescription = base.Columns["sDescription"];
                this.columnInfectionPrevention_SiteDescription = base.Columns["InfectionPrevention_SiteDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnfkiFacilityUnitID = new global::System.Data.DataColumn("fkiFacilityUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiFacilityUnitID);
                this.columnUnit_Name = new global::System.Data.DataColumn("Unit_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Name);
                this.columndtReported = new global::System.Data.DataColumn("dtReported", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtReported);
                this.columnfkiInfectionTypeID = new global::System.Data.DataColumn("fkiInfectionTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionTypeID);
                this.columnInfectionTypeName = new global::System.Data.DataColumn("InfectionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfectionTypeName);
                this.columnfkiInfectionSubTypeID = new global::System.Data.DataColumn("fkiInfectionSubTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionSubTypeID);
                this.columnInfectionSubTypeName = new global::System.Data.DataColumn("InfectionSubTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfectionSubTypeName);
                this.columnfkiSeverityTypeID = new global::System.Data.DataColumn("fkiSeverityTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiSeverityTypeID);
                this.columnsDescription = new global::System.Data.DataColumn("sDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDescription);
                this.columnInfectionPrevention_SiteDescription = new global::System.Data.DataColumn("InfectionPrevention_SiteDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfectionPrevention_SiteDescription);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnfkiFacilityUnitID.AllowDBNull = false;
                this.columnUnit_Name.MaxLength = 200;
                this.columndtReported.AllowDBNull = false;
                this.columnfkiInfectionTypeID.AllowDBNull = false;
                this.columnInfectionTypeName.MaxLength = 2147483647;
                this.columnInfectionSubTypeName.MaxLength = 2147483647;
                this.columnfkiSeverityTypeID.AllowDBNull = false;
                this.columnsDescription.MaxLength = 50;
                this.columnInfectionPrevention_SiteDescription.AllowDBNull = false;
                this.columnInfectionPrevention_SiteDescription.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailRow NewForm_HAI_InfectionDetailRow() {
                return ((Form_HAI_InfectionDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_InfectionDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_InfectionDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_InfectionDetailRowChanged != null)) {
                    this.Form_HAI_InfectionDetailRowChanged(this, new Form_HAI_InfectionDetailRowChangeEvent(((Form_HAI_InfectionDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_InfectionDetailRowChanging != null)) {
                    this.Form_HAI_InfectionDetailRowChanging(this, new Form_HAI_InfectionDetailRowChangeEvent(((Form_HAI_InfectionDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_InfectionDetailRowDeleted != null)) {
                    this.Form_HAI_InfectionDetailRowDeleted(this, new Form_HAI_InfectionDetailRowChangeEvent(((Form_HAI_InfectionDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_InfectionDetailRowDeleting != null)) {
                    this.Form_HAI_InfectionDetailRowDeleting(this, new Form_HAI_InfectionDetailRowChangeEvent(((Form_HAI_InfectionDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_InfectionDetailRow(Form_HAI_InfectionDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_InfectionDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_PredisposingConditionDataTable : global::System.Data.TypedTableBase<Form_HAI_PredisposingConditionRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnfkiConditionID;
            
            private global::System.Data.DataColumn columnPredisposingConditonName;
            
            private global::System.Data.DataColumn columnPredisposingConditionsDescription;
            
            private global::System.Data.DataColumn columnbSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionDataTable() {
                this.TableName = "Form_HAI_PredisposingCondition";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_PredisposingConditionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_PredisposingConditionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiConditionIDColumn {
                get {
                    return this.columnfkiConditionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PredisposingConditonNameColumn {
                get {
                    return this.columnPredisposingConditonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PredisposingConditionsDescriptionColumn {
                get {
                    return this.columnPredisposingConditionsDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bSelectedColumn {
                get {
                    return this.columnbSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionRow this[int index] {
                get {
                    return ((Form_HAI_PredisposingConditionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_PredisposingConditionRowChangeEventHandler Form_HAI_PredisposingConditionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_PredisposingConditionRowChangeEventHandler Form_HAI_PredisposingConditionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_PredisposingConditionRowChangeEventHandler Form_HAI_PredisposingConditionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_PredisposingConditionRowChangeEventHandler Form_HAI_PredisposingConditionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_PredisposingConditionRow(Form_HAI_PredisposingConditionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionRow AddForm_HAI_PredisposingConditionRow(int fkiInfectionFormID, int iSiteNumber, string fkiConditionID, string PredisposingConditonName, string PredisposingConditionsDescription, bool bSelected) {
                Form_HAI_PredisposingConditionRow rowForm_HAI_PredisposingConditionRow = ((Form_HAI_PredisposingConditionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        fkiConditionID,
                        PredisposingConditonName,
                        PredisposingConditionsDescription,
                        bSelected};
                rowForm_HAI_PredisposingConditionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_PredisposingConditionRow);
                return rowForm_HAI_PredisposingConditionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_PredisposingConditionDataTable cln = ((Form_HAI_PredisposingConditionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_PredisposingConditionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnfkiConditionID = base.Columns["fkiConditionID"];
                this.columnPredisposingConditonName = base.Columns["PredisposingConditonName"];
                this.columnPredisposingConditionsDescription = base.Columns["PredisposingConditionsDescription"];
                this.columnbSelected = base.Columns["bSelected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnfkiConditionID = new global::System.Data.DataColumn("fkiConditionID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiConditionID);
                this.columnPredisposingConditonName = new global::System.Data.DataColumn("PredisposingConditonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPredisposingConditonName);
                this.columnPredisposingConditionsDescription = new global::System.Data.DataColumn("PredisposingConditionsDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPredisposingConditionsDescription);
                this.columnbSelected = new global::System.Data.DataColumn("bSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbSelected);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnfkiConditionID.MaxLength = 200;
                this.columnPredisposingConditonName.MaxLength = 2147483647;
                this.columnPredisposingConditionsDescription.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionRow NewForm_HAI_PredisposingConditionRow() {
                return ((Form_HAI_PredisposingConditionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_PredisposingConditionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_PredisposingConditionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_PredisposingConditionRowChanged != null)) {
                    this.Form_HAI_PredisposingConditionRowChanged(this, new Form_HAI_PredisposingConditionRowChangeEvent(((Form_HAI_PredisposingConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_PredisposingConditionRowChanging != null)) {
                    this.Form_HAI_PredisposingConditionRowChanging(this, new Form_HAI_PredisposingConditionRowChangeEvent(((Form_HAI_PredisposingConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_PredisposingConditionRowDeleted != null)) {
                    this.Form_HAI_PredisposingConditionRowDeleted(this, new Form_HAI_PredisposingConditionRowChangeEvent(((Form_HAI_PredisposingConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_PredisposingConditionRowDeleting != null)) {
                    this.Form_HAI_PredisposingConditionRowDeleting(this, new Form_HAI_PredisposingConditionRowChangeEvent(((Form_HAI_PredisposingConditionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_PredisposingConditionRow(Form_HAI_PredisposingConditionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_PredisposingConditionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_BedHistoryDataTable : global::System.Data.TypedTableBase<Form_HAI_BedHistoryRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnsFromUnit;
            
            private global::System.Data.DataColumn columnsToUnit;
            
            private global::System.Data.DataColumn columnsDateTransferred;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryDataTable() {
                this.TableName = "Form_HAI_BedHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_BedHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_BedHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sFromUnitColumn {
                get {
                    return this.columnsFromUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sToUnitColumn {
                get {
                    return this.columnsToUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDateTransferredColumn {
                get {
                    return this.columnsDateTransferred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryRow this[int index] {
                get {
                    return ((Form_HAI_BedHistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BedHistoryRowChangeEventHandler Form_HAI_BedHistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BedHistoryRowChangeEventHandler Form_HAI_BedHistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BedHistoryRowChangeEventHandler Form_HAI_BedHistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BedHistoryRowChangeEventHandler Form_HAI_BedHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_BedHistoryRow(Form_HAI_BedHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryRow AddForm_HAI_BedHistoryRow(int fkiInfectionFormID, int iSiteNumber, string sFromUnit, string sToUnit, System.DateTime sDateTransferred) {
                Form_HAI_BedHistoryRow rowForm_HAI_BedHistoryRow = ((Form_HAI_BedHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        sFromUnit,
                        sToUnit,
                        sDateTransferred};
                rowForm_HAI_BedHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_BedHistoryRow);
                return rowForm_HAI_BedHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_BedHistoryDataTable cln = ((Form_HAI_BedHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_BedHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnsFromUnit = base.Columns["sFromUnit"];
                this.columnsToUnit = base.Columns["sToUnit"];
                this.columnsDateTransferred = base.Columns["sDateTransferred"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnsFromUnit = new global::System.Data.DataColumn("sFromUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsFromUnit);
                this.columnsToUnit = new global::System.Data.DataColumn("sToUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsToUnit);
                this.columnsDateTransferred = new global::System.Data.DataColumn("sDateTransferred", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDateTransferred);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnsFromUnit.MaxLength = 200;
                this.columnsToUnit.MaxLength = 200;
                this.columnsDateTransferred.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryRow NewForm_HAI_BedHistoryRow() {
                return ((Form_HAI_BedHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_BedHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_BedHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_BedHistoryRowChanged != null)) {
                    this.Form_HAI_BedHistoryRowChanged(this, new Form_HAI_BedHistoryRowChangeEvent(((Form_HAI_BedHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_BedHistoryRowChanging != null)) {
                    this.Form_HAI_BedHistoryRowChanging(this, new Form_HAI_BedHistoryRowChangeEvent(((Form_HAI_BedHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_BedHistoryRowDeleted != null)) {
                    this.Form_HAI_BedHistoryRowDeleted(this, new Form_HAI_BedHistoryRowChangeEvent(((Form_HAI_BedHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_BedHistoryRowDeleting != null)) {
                    this.Form_HAI_BedHistoryRowDeleting(this, new Form_HAI_BedHistoryRowChangeEvent(((Form_HAI_BedHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_BedHistoryRow(Form_HAI_BedHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_BedHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_TPN_ENTDataTable : global::System.Data.TypedTableBase<Form_HAI_TPN_ENTRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columnsRelatedHighRiskProcedures;
            
            private global::System.Data.DataColumn columnTPN;
            
            private global::System.Data.DataColumn columnENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTDataTable() {
                this.TableName = "Form_HAI_TPN_ENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_TPN_ENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_TPN_ENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sRelatedHighRiskProceduresColumn {
                get {
                    return this.columnsRelatedHighRiskProcedures;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TPNColumn {
                get {
                    return this.columnTPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTColumn {
                get {
                    return this.columnENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTRow this[int index] {
                get {
                    return ((Form_HAI_TPN_ENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_TPN_ENTRowChangeEventHandler Form_HAI_TPN_ENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_TPN_ENTRowChangeEventHandler Form_HAI_TPN_ENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_TPN_ENTRowChangeEventHandler Form_HAI_TPN_ENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_TPN_ENTRowChangeEventHandler Form_HAI_TPN_ENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_TPN_ENTRow(Form_HAI_TPN_ENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTRow AddForm_HAI_TPN_ENTRow(int fkiInfectionFormID, int sRelatedHighRiskProcedures, string TPN, string ENT) {
                Form_HAI_TPN_ENTRow rowForm_HAI_TPN_ENTRow = ((Form_HAI_TPN_ENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        sRelatedHighRiskProcedures,
                        TPN,
                        ENT};
                rowForm_HAI_TPN_ENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_TPN_ENTRow);
                return rowForm_HAI_TPN_ENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_TPN_ENTDataTable cln = ((Form_HAI_TPN_ENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_TPN_ENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columnsRelatedHighRiskProcedures = base.Columns["sRelatedHighRiskProcedures"];
                this.columnTPN = base.Columns["TPN"];
                this.columnENT = base.Columns["ENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columnsRelatedHighRiskProcedures = new global::System.Data.DataColumn("sRelatedHighRiskProcedures", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsRelatedHighRiskProcedures);
                this.columnTPN = new global::System.Data.DataColumn("TPN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTPN);
                this.columnENT = new global::System.Data.DataColumn("ENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENT);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columnsRelatedHighRiskProcedures.AllowDBNull = false;
                this.columnTPN.ReadOnly = true;
                this.columnTPN.MaxLength = 3;
                this.columnENT.ReadOnly = true;
                this.columnENT.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTRow NewForm_HAI_TPN_ENTRow() {
                return ((Form_HAI_TPN_ENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_TPN_ENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_TPN_ENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_TPN_ENTRowChanged != null)) {
                    this.Form_HAI_TPN_ENTRowChanged(this, new Form_HAI_TPN_ENTRowChangeEvent(((Form_HAI_TPN_ENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_TPN_ENTRowChanging != null)) {
                    this.Form_HAI_TPN_ENTRowChanging(this, new Form_HAI_TPN_ENTRowChangeEvent(((Form_HAI_TPN_ENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_TPN_ENTRowDeleted != null)) {
                    this.Form_HAI_TPN_ENTRowDeleted(this, new Form_HAI_TPN_ENTRowChangeEvent(((Form_HAI_TPN_ENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_TPN_ENTRowDeleting != null)) {
                    this.Form_HAI_TPN_ENTRowDeleting(this, new Form_HAI_TPN_ENTRowChangeEvent(((Form_HAI_TPN_ENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_TPN_ENTRow(Form_HAI_TPN_ENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_TPN_ENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_AntibioticDataTable : global::System.Data.TypedTableBase<Form_HAI_AntibioticRow> {
            
            private global::System.Data.DataColumn columnsDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticDataTable() {
                this.TableName = "Form_HAI_Antibiotic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_AntibioticDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_AntibioticDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDescriptionColumn {
                get {
                    return this.columnsDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticRow this[int index] {
                get {
                    return ((Form_HAI_AntibioticRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_AntibioticRowChangeEventHandler Form_HAI_AntibioticRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_AntibioticRowChangeEventHandler Form_HAI_AntibioticRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_AntibioticRowChangeEventHandler Form_HAI_AntibioticRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_AntibioticRowChangeEventHandler Form_HAI_AntibioticRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_AntibioticRow(Form_HAI_AntibioticRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticRow AddForm_HAI_AntibioticRow(string sDescription) {
                Form_HAI_AntibioticRow rowForm_HAI_AntibioticRow = ((Form_HAI_AntibioticRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sDescription};
                rowForm_HAI_AntibioticRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_AntibioticRow);
                return rowForm_HAI_AntibioticRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_AntibioticDataTable cln = ((Form_HAI_AntibioticDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_AntibioticDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnsDescription = base.Columns["sDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnsDescription = new global::System.Data.DataColumn("sDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDescription);
                this.columnsDescription.AllowDBNull = false;
                this.columnsDescription.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticRow NewForm_HAI_AntibioticRow() {
                return ((Form_HAI_AntibioticRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_AntibioticRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_AntibioticRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_AntibioticRowChanged != null)) {
                    this.Form_HAI_AntibioticRowChanged(this, new Form_HAI_AntibioticRowChangeEvent(((Form_HAI_AntibioticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_AntibioticRowChanging != null)) {
                    this.Form_HAI_AntibioticRowChanging(this, new Form_HAI_AntibioticRowChangeEvent(((Form_HAI_AntibioticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_AntibioticRowDeleted != null)) {
                    this.Form_HAI_AntibioticRowDeleted(this, new Form_HAI_AntibioticRowChangeEvent(((Form_HAI_AntibioticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_AntibioticRowDeleting != null)) {
                    this.Form_HAI_AntibioticRowDeleting(this, new Form_HAI_AntibioticRowChangeEvent(((Form_HAI_AntibioticRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_AntibioticRow(Form_HAI_AntibioticRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_AntibioticDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_BundleComplianceDataTable : global::System.Data.TypedTableBase<Form_HAI_BundleComplianceRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnsRelatedHighRiskProcedures;
            
            private global::System.Data.DataColumn columnfkiInfectionTypeID;
            
            private global::System.Data.DataColumn columnInfectionTypeName;
            
            private global::System.Data.DataColumn columnfkiBundleComplianceID;
            
            private global::System.Data.DataColumn columnsDescription;
            
            private global::System.Data.DataColumn columnsInfectionDays;
            
            private global::System.Data.DataColumn columnfkiBundleItemTypeID;
            
            private global::System.Data.DataColumn columnBundleItemTypeName;
            
            private global::System.Data.DataColumn columnbSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceDataTable() {
                this.TableName = "Form_HAI_BundleCompliance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_BundleComplianceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_BundleComplianceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sRelatedHighRiskProceduresColumn {
                get {
                    return this.columnsRelatedHighRiskProcedures;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionTypeIDColumn {
                get {
                    return this.columnfkiInfectionTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InfectionTypeNameColumn {
                get {
                    return this.columnInfectionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiBundleComplianceIDColumn {
                get {
                    return this.columnfkiBundleComplianceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDescriptionColumn {
                get {
                    return this.columnsDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sInfectionDaysColumn {
                get {
                    return this.columnsInfectionDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiBundleItemTypeIDColumn {
                get {
                    return this.columnfkiBundleItemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BundleItemTypeNameColumn {
                get {
                    return this.columnBundleItemTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bSelectedColumn {
                get {
                    return this.columnbSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceRow this[int index] {
                get {
                    return ((Form_HAI_BundleComplianceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BundleComplianceRowChangeEventHandler Form_HAI_BundleComplianceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BundleComplianceRowChangeEventHandler Form_HAI_BundleComplianceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BundleComplianceRowChangeEventHandler Form_HAI_BundleComplianceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_BundleComplianceRowChangeEventHandler Form_HAI_BundleComplianceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_BundleComplianceRow(Form_HAI_BundleComplianceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceRow AddForm_HAI_BundleComplianceRow(int fkiInfectionFormID, int iSiteNumber, string sRelatedHighRiskProcedures, int fkiInfectionTypeID, string InfectionTypeName, int fkiBundleComplianceID, string sDescription, string sInfectionDays, int fkiBundleItemTypeID, string BundleItemTypeName, bool bSelected) {
                Form_HAI_BundleComplianceRow rowForm_HAI_BundleComplianceRow = ((Form_HAI_BundleComplianceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        sRelatedHighRiskProcedures,
                        fkiInfectionTypeID,
                        InfectionTypeName,
                        fkiBundleComplianceID,
                        sDescription,
                        sInfectionDays,
                        fkiBundleItemTypeID,
                        BundleItemTypeName,
                        bSelected};
                rowForm_HAI_BundleComplianceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_BundleComplianceRow);
                return rowForm_HAI_BundleComplianceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_BundleComplianceDataTable cln = ((Form_HAI_BundleComplianceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_BundleComplianceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnsRelatedHighRiskProcedures = base.Columns["sRelatedHighRiskProcedures"];
                this.columnfkiInfectionTypeID = base.Columns["fkiInfectionTypeID"];
                this.columnInfectionTypeName = base.Columns["InfectionTypeName"];
                this.columnfkiBundleComplianceID = base.Columns["fkiBundleComplianceID"];
                this.columnsDescription = base.Columns["sDescription"];
                this.columnsInfectionDays = base.Columns["sInfectionDays"];
                this.columnfkiBundleItemTypeID = base.Columns["fkiBundleItemTypeID"];
                this.columnBundleItemTypeName = base.Columns["BundleItemTypeName"];
                this.columnbSelected = base.Columns["bSelected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnsRelatedHighRiskProcedures = new global::System.Data.DataColumn("sRelatedHighRiskProcedures", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsRelatedHighRiskProcedures);
                this.columnfkiInfectionTypeID = new global::System.Data.DataColumn("fkiInfectionTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionTypeID);
                this.columnInfectionTypeName = new global::System.Data.DataColumn("InfectionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInfectionTypeName);
                this.columnfkiBundleComplianceID = new global::System.Data.DataColumn("fkiBundleComplianceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiBundleComplianceID);
                this.columnsDescription = new global::System.Data.DataColumn("sDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDescription);
                this.columnsInfectionDays = new global::System.Data.DataColumn("sInfectionDays", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsInfectionDays);
                this.columnfkiBundleItemTypeID = new global::System.Data.DataColumn("fkiBundleItemTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiBundleItemTypeID);
                this.columnBundleItemTypeName = new global::System.Data.DataColumn("BundleItemTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBundleItemTypeName);
                this.columnbSelected = new global::System.Data.DataColumn("bSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbSelected);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnsRelatedHighRiskProcedures.AllowDBNull = false;
                this.columnsRelatedHighRiskProcedures.MaxLength = 2147483647;
                this.columnfkiInfectionTypeID.AllowDBNull = false;
                this.columnInfectionTypeName.MaxLength = 2147483647;
                this.columnfkiBundleComplianceID.AllowDBNull = false;
                this.columnsDescription.MaxLength = 50;
                this.columnsInfectionDays.MaxLength = 2147483647;
                this.columnBundleItemTypeName.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceRow NewForm_HAI_BundleComplianceRow() {
                return ((Form_HAI_BundleComplianceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_BundleComplianceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_BundleComplianceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_BundleComplianceRowChanged != null)) {
                    this.Form_HAI_BundleComplianceRowChanged(this, new Form_HAI_BundleComplianceRowChangeEvent(((Form_HAI_BundleComplianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_BundleComplianceRowChanging != null)) {
                    this.Form_HAI_BundleComplianceRowChanging(this, new Form_HAI_BundleComplianceRowChangeEvent(((Form_HAI_BundleComplianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_BundleComplianceRowDeleted != null)) {
                    this.Form_HAI_BundleComplianceRowDeleted(this, new Form_HAI_BundleComplianceRowChangeEvent(((Form_HAI_BundleComplianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_BundleComplianceRowDeleting != null)) {
                    this.Form_HAI_BundleComplianceRowDeleting(this, new Form_HAI_BundleComplianceRowChangeEvent(((Form_HAI_BundleComplianceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_BundleComplianceRow(Form_HAI_BundleComplianceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_BundleComplianceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_ReportableDiseasesDataTable : global::System.Data.TypedTableBase<Form_HAI_ReportableDiseasesRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnsReportedToDepartment;
            
            private global::System.Data.DataColumn columnDiseaseName;
            
            private global::System.Data.DataColumn columnsDateReported;
            
            private global::System.Data.DataColumn columnsReferenceNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesDataTable() {
                this.TableName = "Form_HAI_ReportableDiseases";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_ReportableDiseasesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_ReportableDiseasesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sReportedToDepartmentColumn {
                get {
                    return this.columnsReportedToDepartment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiseaseNameColumn {
                get {
                    return this.columnDiseaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDateReportedColumn {
                get {
                    return this.columnsDateReported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sReferenceNumberColumn {
                get {
                    return this.columnsReferenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesRow this[int index] {
                get {
                    return ((Form_HAI_ReportableDiseasesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_ReportableDiseasesRowChangeEventHandler Form_HAI_ReportableDiseasesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_ReportableDiseasesRowChangeEventHandler Form_HAI_ReportableDiseasesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_ReportableDiseasesRowChangeEventHandler Form_HAI_ReportableDiseasesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_ReportableDiseasesRowChangeEventHandler Form_HAI_ReportableDiseasesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_ReportableDiseasesRow(Form_HAI_ReportableDiseasesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesRow AddForm_HAI_ReportableDiseasesRow(int fkiInfectionFormID, int iSiteNumber, string sReportedToDepartment, string DiseaseName, System.DateTime sDateReported, string sReferenceNumber) {
                Form_HAI_ReportableDiseasesRow rowForm_HAI_ReportableDiseasesRow = ((Form_HAI_ReportableDiseasesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        sReportedToDepartment,
                        DiseaseName,
                        sDateReported,
                        sReferenceNumber};
                rowForm_HAI_ReportableDiseasesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_ReportableDiseasesRow);
                return rowForm_HAI_ReportableDiseasesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_ReportableDiseasesDataTable cln = ((Form_HAI_ReportableDiseasesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_ReportableDiseasesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnsReportedToDepartment = base.Columns["sReportedToDepartment"];
                this.columnDiseaseName = base.Columns["DiseaseName"];
                this.columnsDateReported = base.Columns["sDateReported"];
                this.columnsReferenceNumber = base.Columns["sReferenceNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnsReportedToDepartment = new global::System.Data.DataColumn("sReportedToDepartment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsReportedToDepartment);
                this.columnDiseaseName = new global::System.Data.DataColumn("DiseaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiseaseName);
                this.columnsDateReported = new global::System.Data.DataColumn("sDateReported", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDateReported);
                this.columnsReferenceNumber = new global::System.Data.DataColumn("sReferenceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsReferenceNumber);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnsReportedToDepartment.MaxLength = 200;
                this.columnDiseaseName.MaxLength = 2147483647;
                this.columnsDateReported.ReadOnly = true;
                this.columnsReferenceNumber.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesRow NewForm_HAI_ReportableDiseasesRow() {
                return ((Form_HAI_ReportableDiseasesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_ReportableDiseasesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_ReportableDiseasesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_ReportableDiseasesRowChanged != null)) {
                    this.Form_HAI_ReportableDiseasesRowChanged(this, new Form_HAI_ReportableDiseasesRowChangeEvent(((Form_HAI_ReportableDiseasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_ReportableDiseasesRowChanging != null)) {
                    this.Form_HAI_ReportableDiseasesRowChanging(this, new Form_HAI_ReportableDiseasesRowChangeEvent(((Form_HAI_ReportableDiseasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_ReportableDiseasesRowDeleted != null)) {
                    this.Form_HAI_ReportableDiseasesRowDeleted(this, new Form_HAI_ReportableDiseasesRowChangeEvent(((Form_HAI_ReportableDiseasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_ReportableDiseasesRowDeleting != null)) {
                    this.Form_HAI_ReportableDiseasesRowDeleting(this, new Form_HAI_ReportableDiseasesRowChangeEvent(((Form_HAI_ReportableDiseasesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_ReportableDiseasesRow(Form_HAI_ReportableDiseasesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_ReportableDiseasesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_LabReportsDataTable : global::System.Data.TypedTableBase<Form_HAI_LabReportsRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnsLabDate;
            
            private global::System.Data.DataColumn columnsSpecimen;
            
            private global::System.Data.DataColumn columnsOrganism;
            
            private global::System.Data.DataColumn columnsLabNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsDataTable() {
                this.TableName = "Form_HAI_LabReports";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_LabReportsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_LabReportsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sLabDateColumn {
                get {
                    return this.columnsLabDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSpecimenColumn {
                get {
                    return this.columnsSpecimen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sOrganismColumn {
                get {
                    return this.columnsOrganism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sLabNumberColumn {
                get {
                    return this.columnsLabNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsRow this[int index] {
                get {
                    return ((Form_HAI_LabReportsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_LabReportsRowChangeEventHandler Form_HAI_LabReportsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_LabReportsRowChangeEventHandler Form_HAI_LabReportsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_LabReportsRowChangeEventHandler Form_HAI_LabReportsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_LabReportsRowChangeEventHandler Form_HAI_LabReportsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_LabReportsRow(Form_HAI_LabReportsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsRow AddForm_HAI_LabReportsRow(int fkiInfectionFormID, int iSiteNumber, System.DateTime sLabDate, string sSpecimen, string sOrganism, string sLabNumber) {
                Form_HAI_LabReportsRow rowForm_HAI_LabReportsRow = ((Form_HAI_LabReportsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        sLabDate,
                        sSpecimen,
                        sOrganism,
                        sLabNumber};
                rowForm_HAI_LabReportsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_LabReportsRow);
                return rowForm_HAI_LabReportsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_LabReportsDataTable cln = ((Form_HAI_LabReportsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_LabReportsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnsLabDate = base.Columns["sLabDate"];
                this.columnsSpecimen = base.Columns["sSpecimen"];
                this.columnsOrganism = base.Columns["sOrganism"];
                this.columnsLabNumber = base.Columns["sLabNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnsLabDate = new global::System.Data.DataColumn("sLabDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsLabDate);
                this.columnsSpecimen = new global::System.Data.DataColumn("sSpecimen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSpecimen);
                this.columnsOrganism = new global::System.Data.DataColumn("sOrganism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsOrganism);
                this.columnsLabNumber = new global::System.Data.DataColumn("sLabNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsLabNumber);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnsLabDate.ReadOnly = true;
                this.columnsSpecimen.MaxLength = 200;
                this.columnsOrganism.MaxLength = 200;
                this.columnsLabNumber.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsRow NewForm_HAI_LabReportsRow() {
                return ((Form_HAI_LabReportsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_LabReportsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_LabReportsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_LabReportsRowChanged != null)) {
                    this.Form_HAI_LabReportsRowChanged(this, new Form_HAI_LabReportsRowChangeEvent(((Form_HAI_LabReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_LabReportsRowChanging != null)) {
                    this.Form_HAI_LabReportsRowChanging(this, new Form_HAI_LabReportsRowChangeEvent(((Form_HAI_LabReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_LabReportsRowDeleted != null)) {
                    this.Form_HAI_LabReportsRowDeleted(this, new Form_HAI_LabReportsRowChangeEvent(((Form_HAI_LabReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_LabReportsRowDeleting != null)) {
                    this.Form_HAI_LabReportsRowDeleting(this, new Form_HAI_LabReportsRowChangeEvent(((Form_HAI_LabReportsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_LabReportsRow(Form_HAI_LabReportsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_LabReportsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Form_HAI_SurgeryDetailsDataTable : global::System.Data.TypedTableBase<Form_HAI_SurgeryDetailsRow> {
            
            private global::System.Data.DataColumn columnfkiInfectionFormID;
            
            private global::System.Data.DataColumn columniSiteNumber;
            
            private global::System.Data.DataColumn columnsFacility;
            
            private global::System.Data.DataColumn columnsVisitNumber;
            
            private global::System.Data.DataColumn columnsProcedure;
            
            private global::System.Data.DataColumn columnsSurgeryDate;
            
            private global::System.Data.DataColumn columnsSurgeryDuration;
            
            private global::System.Data.DataColumn columnsTheatreInvoice;
            
            private global::System.Data.DataColumn columnsTheatre;
            
            private global::System.Data.DataColumn columnsSurgeon;
            
            private global::System.Data.DataColumn columnsAssistant;
            
            private global::System.Data.DataColumn columnsScrubNurse;
            
            private global::System.Data.DataColumn columnsAnaesthesist;
            
            private global::System.Data.DataColumn columnsWound;
            
            private global::System.Data.DataColumn columnsCategory;
            
            private global::System.Data.DataColumn columnsFinalDiagnosis;
            
            private global::System.Data.DataColumn columnsAdmissionDate;
            
            private global::System.Data.DataColumn columnsDischargeDate;
            
            private global::System.Data.DataColumn columnbSelected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsDataTable() {
                this.TableName = "Form_HAI_SurgeryDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_SurgeryDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Form_HAI_SurgeryDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fkiInfectionFormIDColumn {
                get {
                    return this.columnfkiInfectionFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iSiteNumberColumn {
                get {
                    return this.columniSiteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sFacilityColumn {
                get {
                    return this.columnsFacility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sVisitNumberColumn {
                get {
                    return this.columnsVisitNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sProcedureColumn {
                get {
                    return this.columnsProcedure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSurgeryDateColumn {
                get {
                    return this.columnsSurgeryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSurgeryDurationColumn {
                get {
                    return this.columnsSurgeryDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sTheatreInvoiceColumn {
                get {
                    return this.columnsTheatreInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sTheatreColumn {
                get {
                    return this.columnsTheatre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sSurgeonColumn {
                get {
                    return this.columnsSurgeon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sAssistantColumn {
                get {
                    return this.columnsAssistant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sScrubNurseColumn {
                get {
                    return this.columnsScrubNurse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sAnaesthesistColumn {
                get {
                    return this.columnsAnaesthesist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sWoundColumn {
                get {
                    return this.columnsWound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sCategoryColumn {
                get {
                    return this.columnsCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sFinalDiagnosisColumn {
                get {
                    return this.columnsFinalDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sAdmissionDateColumn {
                get {
                    return this.columnsAdmissionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sDischargeDateColumn {
                get {
                    return this.columnsDischargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bSelectedColumn {
                get {
                    return this.columnbSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsRow this[int index] {
                get {
                    return ((Form_HAI_SurgeryDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SurgeryDetailsRowChangeEventHandler Form_HAI_SurgeryDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SurgeryDetailsRowChangeEventHandler Form_HAI_SurgeryDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SurgeryDetailsRowChangeEventHandler Form_HAI_SurgeryDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Form_HAI_SurgeryDetailsRowChangeEventHandler Form_HAI_SurgeryDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForm_HAI_SurgeryDetailsRow(Form_HAI_SurgeryDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsRow AddForm_HAI_SurgeryDetailsRow(
                        int fkiInfectionFormID, 
                        int iSiteNumber, 
                        string sFacility, 
                        string sVisitNumber, 
                        string sProcedure, 
                        System.DateTime sSurgeryDate, 
                        string sSurgeryDuration, 
                        string sTheatreInvoice, 
                        string sTheatre, 
                        string sSurgeon, 
                        string sAssistant, 
                        string sScrubNurse, 
                        string sAnaesthesist, 
                        string sWound, 
                        string sCategory, 
                        string sFinalDiagnosis, 
                        string sAdmissionDate, 
                        string sDischargeDate, 
                        bool bSelected) {
                Form_HAI_SurgeryDetailsRow rowForm_HAI_SurgeryDetailsRow = ((Form_HAI_SurgeryDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fkiInfectionFormID,
                        iSiteNumber,
                        sFacility,
                        sVisitNumber,
                        sProcedure,
                        sSurgeryDate,
                        sSurgeryDuration,
                        sTheatreInvoice,
                        sTheatre,
                        sSurgeon,
                        sAssistant,
                        sScrubNurse,
                        sAnaesthesist,
                        sWound,
                        sCategory,
                        sFinalDiagnosis,
                        sAdmissionDate,
                        sDischargeDate,
                        bSelected};
                rowForm_HAI_SurgeryDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForm_HAI_SurgeryDetailsRow);
                return rowForm_HAI_SurgeryDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Form_HAI_SurgeryDetailsDataTable cln = ((Form_HAI_SurgeryDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Form_HAI_SurgeryDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnfkiInfectionFormID = base.Columns["fkiInfectionFormID"];
                this.columniSiteNumber = base.Columns["iSiteNumber"];
                this.columnsFacility = base.Columns["sFacility"];
                this.columnsVisitNumber = base.Columns["sVisitNumber"];
                this.columnsProcedure = base.Columns["sProcedure"];
                this.columnsSurgeryDate = base.Columns["sSurgeryDate"];
                this.columnsSurgeryDuration = base.Columns["sSurgeryDuration"];
                this.columnsTheatreInvoice = base.Columns["sTheatreInvoice"];
                this.columnsTheatre = base.Columns["sTheatre"];
                this.columnsSurgeon = base.Columns["sSurgeon"];
                this.columnsAssistant = base.Columns["sAssistant"];
                this.columnsScrubNurse = base.Columns["sScrubNurse"];
                this.columnsAnaesthesist = base.Columns["sAnaesthesist"];
                this.columnsWound = base.Columns["sWound"];
                this.columnsCategory = base.Columns["sCategory"];
                this.columnsFinalDiagnosis = base.Columns["sFinalDiagnosis"];
                this.columnsAdmissionDate = base.Columns["sAdmissionDate"];
                this.columnsDischargeDate = base.Columns["sDischargeDate"];
                this.columnbSelected = base.Columns["bSelected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnfkiInfectionFormID = new global::System.Data.DataColumn("fkiInfectionFormID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfkiInfectionFormID);
                this.columniSiteNumber = new global::System.Data.DataColumn("iSiteNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniSiteNumber);
                this.columnsFacility = new global::System.Data.DataColumn("sFacility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsFacility);
                this.columnsVisitNumber = new global::System.Data.DataColumn("sVisitNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsVisitNumber);
                this.columnsProcedure = new global::System.Data.DataColumn("sProcedure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsProcedure);
                this.columnsSurgeryDate = new global::System.Data.DataColumn("sSurgeryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSurgeryDate);
                this.columnsSurgeryDuration = new global::System.Data.DataColumn("sSurgeryDuration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSurgeryDuration);
                this.columnsTheatreInvoice = new global::System.Data.DataColumn("sTheatreInvoice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsTheatreInvoice);
                this.columnsTheatre = new global::System.Data.DataColumn("sTheatre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsTheatre);
                this.columnsSurgeon = new global::System.Data.DataColumn("sSurgeon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsSurgeon);
                this.columnsAssistant = new global::System.Data.DataColumn("sAssistant", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsAssistant);
                this.columnsScrubNurse = new global::System.Data.DataColumn("sScrubNurse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsScrubNurse);
                this.columnsAnaesthesist = new global::System.Data.DataColumn("sAnaesthesist", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsAnaesthesist);
                this.columnsWound = new global::System.Data.DataColumn("sWound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsWound);
                this.columnsCategory = new global::System.Data.DataColumn("sCategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsCategory);
                this.columnsFinalDiagnosis = new global::System.Data.DataColumn("sFinalDiagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsFinalDiagnosis);
                this.columnsAdmissionDate = new global::System.Data.DataColumn("sAdmissionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsAdmissionDate);
                this.columnsDischargeDate = new global::System.Data.DataColumn("sDischargeDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsDischargeDate);
                this.columnbSelected = new global::System.Data.DataColumn("bSelected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbSelected);
                this.columnfkiInfectionFormID.AllowDBNull = false;
                this.columniSiteNumber.AllowDBNull = false;
                this.columnsFacility.ReadOnly = true;
                this.columnsFacility.MaxLength = 2147483647;
                this.columnsVisitNumber.ReadOnly = true;
                this.columnsVisitNumber.MaxLength = 200;
                this.columnsProcedure.ReadOnly = true;
                this.columnsProcedure.MaxLength = 2147483647;
                this.columnsSurgeryDate.ReadOnly = true;
                this.columnsSurgeryDuration.ReadOnly = true;
                this.columnsSurgeryDuration.MaxLength = 100;
                this.columnsTheatreInvoice.ReadOnly = true;
                this.columnsTheatreInvoice.MaxLength = 100;
                this.columnsTheatre.ReadOnly = true;
                this.columnsTheatre.MaxLength = 100;
                this.columnsSurgeon.ReadOnly = true;
                this.columnsSurgeon.MaxLength = 200;
                this.columnsAssistant.ReadOnly = true;
                this.columnsAssistant.MaxLength = 200;
                this.columnsScrubNurse.ReadOnly = true;
                this.columnsScrubNurse.MaxLength = 200;
                this.columnsAnaesthesist.ReadOnly = true;
                this.columnsAnaesthesist.MaxLength = 200;
                this.columnsWound.ReadOnly = true;
                this.columnsWound.MaxLength = 200;
                this.columnsCategory.ReadOnly = true;
                this.columnsCategory.MaxLength = 200;
                this.columnsFinalDiagnosis.ReadOnly = true;
                this.columnsFinalDiagnosis.MaxLength = 200;
                this.columnsAdmissionDate.ReadOnly = true;
                this.columnsAdmissionDate.MaxLength = 200;
                this.columnsDischargeDate.ReadOnly = true;
                this.columnsDischargeDate.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsRow NewForm_HAI_SurgeryDetailsRow() {
                return ((Form_HAI_SurgeryDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Form_HAI_SurgeryDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Form_HAI_SurgeryDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Form_HAI_SurgeryDetailsRowChanged != null)) {
                    this.Form_HAI_SurgeryDetailsRowChanged(this, new Form_HAI_SurgeryDetailsRowChangeEvent(((Form_HAI_SurgeryDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Form_HAI_SurgeryDetailsRowChanging != null)) {
                    this.Form_HAI_SurgeryDetailsRowChanging(this, new Form_HAI_SurgeryDetailsRowChangeEvent(((Form_HAI_SurgeryDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Form_HAI_SurgeryDetailsRowDeleted != null)) {
                    this.Form_HAI_SurgeryDetailsRowDeleted(this, new Form_HAI_SurgeryDetailsRowChangeEvent(((Form_HAI_SurgeryDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Form_HAI_SurgeryDetailsRowDeleting != null)) {
                    this.Form_HAI_SurgeryDetailsRowDeleting(this, new Form_HAI_SurgeryDetailsRowChangeEvent(((Form_HAI_SurgeryDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForm_HAI_SurgeryDetailsRow(Form_HAI_SurgeryDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet_Form_HAI_Site ds = new DataSet_Form_HAI_Site();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Form_HAI_SurgeryDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_HeaderRow : global::System.Data.DataRow {
            
            private Form_HAI_HeaderDataTable tableForm_HAI_Header;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_HeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_Header = ((Form_HAI_HeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FacilityDisplayName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_Header.FacilityDisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacilityDisplayName\' in table \'Form_HAI_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_Header.FacilityDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sReportNumber {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_Header.sReportNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sReportNumber\' in table \'Form_HAI_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_Header.sReportNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFacilityDisplayNameNull() {
                return this.IsNull(this.tableForm_HAI_Header.FacilityDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFacilityDisplayNameNull() {
                this[this.tableForm_HAI_Header.FacilityDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssReportNumberNull() {
                return this.IsNull(this.tableForm_HAI_Header.sReportNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsReportNumberNull() {
                this[this.tableForm_HAI_Header.sReportNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_SiteRow : global::System.Data.DataRow {
            
            private Form_HAI_SiteDataTable tableForm_HAI_Site;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_SiteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_Site = ((Form_HAI_SiteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_Site.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_Site.iSiteNumberColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_InfectionDetailRow : global::System.Data.DataRow {
            
            private Form_HAI_InfectionDetailDataTable tableForm_HAI_InfectionDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_InfectionDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_InfectionDetail = ((Form_HAI_InfectionDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_InfectionDetail.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_InfectionDetail.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiFacilityUnitID {
                get {
                    return ((int)(this[this.tableForm_HAI_InfectionDetail.fkiFacilityUnitIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.fkiFacilityUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Unit_Name {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_InfectionDetail.Unit_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Name\' in table \'Form_HAI_InfectionDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.Unit_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dtReported {
                get {
                    return ((global::System.DateTime)(this[this.tableForm_HAI_InfectionDetail.dtReportedColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.dtReportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionTypeID {
                get {
                    return ((int)(this[this.tableForm_HAI_InfectionDetail.fkiInfectionTypeIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.fkiInfectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InfectionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_InfectionDetail.InfectionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfectionTypeName\' in table \'Form_HAI_InfectionDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.InfectionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionSubTypeID {
                get {
                    try {
                        return ((int)(this[this.tableForm_HAI_InfectionDetail.fkiInfectionSubTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fkiInfectionSubTypeID\' in table \'Form_HAI_InfectionDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.fkiInfectionSubTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InfectionSubTypeName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_InfectionDetail.InfectionSubTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfectionSubTypeName\' in table \'Form_HAI_InfectionDetail\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.InfectionSubTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiSeverityTypeID {
                get {
                    return ((int)(this[this.tableForm_HAI_InfectionDetail.fkiSeverityTypeIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.fkiSeverityTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sDescription {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_InfectionDetail.sDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sDescription\' in table \'Form_HAI_InfectionDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.sDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InfectionPrevention_SiteDescription {
                get {
                    return ((string)(this[this.tableForm_HAI_InfectionDetail.InfectionPrevention_SiteDescriptionColumn]));
                }
                set {
                    this[this.tableForm_HAI_InfectionDetail.InfectionPrevention_SiteDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnit_NameNull() {
                return this.IsNull(this.tableForm_HAI_InfectionDetail.Unit_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnit_NameNull() {
                this[this.tableForm_HAI_InfectionDetail.Unit_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfectionTypeNameNull() {
                return this.IsNull(this.tableForm_HAI_InfectionDetail.InfectionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfectionTypeNameNull() {
                this[this.tableForm_HAI_InfectionDetail.InfectionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfkiInfectionSubTypeIDNull() {
                return this.IsNull(this.tableForm_HAI_InfectionDetail.fkiInfectionSubTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfkiInfectionSubTypeIDNull() {
                this[this.tableForm_HAI_InfectionDetail.fkiInfectionSubTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfectionSubTypeNameNull() {
                return this.IsNull(this.tableForm_HAI_InfectionDetail.InfectionSubTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfectionSubTypeNameNull() {
                this[this.tableForm_HAI_InfectionDetail.InfectionSubTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssDescriptionNull() {
                return this.IsNull(this.tableForm_HAI_InfectionDetail.sDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsDescriptionNull() {
                this[this.tableForm_HAI_InfectionDetail.sDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_PredisposingConditionRow : global::System.Data.DataRow {
            
            private Form_HAI_PredisposingConditionDataTable tableForm_HAI_PredisposingCondition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_PredisposingConditionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_PredisposingCondition = ((Form_HAI_PredisposingConditionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_PredisposingCondition.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_PredisposingCondition.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fkiConditionID {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_PredisposingCondition.fkiConditionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fkiConditionID\' in table \'Form_HAI_PredisposingCondition\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.fkiConditionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PredisposingConditonName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_PredisposingCondition.PredisposingConditonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PredisposingConditonName\' in table \'Form_HAI_PredisposingCo" +
                                "ndition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.PredisposingConditonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PredisposingConditionsDescription {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_PredisposingCondition.PredisposingConditionsDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PredisposingConditionsDescription\' in table \'Form_HAI_Predi" +
                                "sposingCondition\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.PredisposingConditionsDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool bSelected {
                get {
                    try {
                        return ((bool)(this[this.tableForm_HAI_PredisposingCondition.bSelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bSelected\' in table \'Form_HAI_PredisposingCondition\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_PredisposingCondition.bSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfkiConditionIDNull() {
                return this.IsNull(this.tableForm_HAI_PredisposingCondition.fkiConditionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfkiConditionIDNull() {
                this[this.tableForm_HAI_PredisposingCondition.fkiConditionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPredisposingConditonNameNull() {
                return this.IsNull(this.tableForm_HAI_PredisposingCondition.PredisposingConditonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPredisposingConditonNameNull() {
                this[this.tableForm_HAI_PredisposingCondition.PredisposingConditonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPredisposingConditionsDescriptionNull() {
                return this.IsNull(this.tableForm_HAI_PredisposingCondition.PredisposingConditionsDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPredisposingConditionsDescriptionNull() {
                this[this.tableForm_HAI_PredisposingCondition.PredisposingConditionsDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbSelectedNull() {
                return this.IsNull(this.tableForm_HAI_PredisposingCondition.bSelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbSelectedNull() {
                this[this.tableForm_HAI_PredisposingCondition.bSelectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_BedHistoryRow : global::System.Data.DataRow {
            
            private Form_HAI_BedHistoryDataTable tableForm_HAI_BedHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_BedHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_BedHistory = ((Form_HAI_BedHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_BedHistory.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_BedHistory.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_BedHistory.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_BedHistory.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sFromUnit {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BedHistory.sFromUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sFromUnit\' in table \'Form_HAI_BedHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BedHistory.sFromUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sToUnit {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BedHistory.sToUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sToUnit\' in table \'Form_HAI_BedHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BedHistory.sToUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sDateTransferred {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableForm_HAI_BedHistory.sDateTransferredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sDateTransferred\' in table \'Form_HAI_BedHistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BedHistory.sDateTransferredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssFromUnitNull() {
                return this.IsNull(this.tableForm_HAI_BedHistory.sFromUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsFromUnitNull() {
                this[this.tableForm_HAI_BedHistory.sFromUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssToUnitNull() {
                return this.IsNull(this.tableForm_HAI_BedHistory.sToUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsToUnitNull() {
                this[this.tableForm_HAI_BedHistory.sToUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssDateTransferredNull() {
                return this.IsNull(this.tableForm_HAI_BedHistory.sDateTransferredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsDateTransferredNull() {
                this[this.tableForm_HAI_BedHistory.sDateTransferredColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_TPN_ENTRow : global::System.Data.DataRow {
            
            private Form_HAI_TPN_ENTDataTable tableForm_HAI_TPN_ENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_TPN_ENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_TPN_ENT = ((Form_HAI_TPN_ENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_TPN_ENT.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_TPN_ENT.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sRelatedHighRiskProcedures {
                get {
                    return ((int)(this[this.tableForm_HAI_TPN_ENT.sRelatedHighRiskProceduresColumn]));
                }
                set {
                    this[this.tableForm_HAI_TPN_ENT.sRelatedHighRiskProceduresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TPN {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_TPN_ENT.TPNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TPN\' in table \'Form_HAI_TPN_ENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_TPN_ENT.TPNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ENT {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_TPN_ENT.ENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENT\' in table \'Form_HAI_TPN_ENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_TPN_ENT.ENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTPNNull() {
                return this.IsNull(this.tableForm_HAI_TPN_ENT.TPNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTPNNull() {
                this[this.tableForm_HAI_TPN_ENT.TPNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsENTNull() {
                return this.IsNull(this.tableForm_HAI_TPN_ENT.ENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetENTNull() {
                this[this.tableForm_HAI_TPN_ENT.ENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_AntibioticRow : global::System.Data.DataRow {
            
            private Form_HAI_AntibioticDataTable tableForm_HAI_Antibiotic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_AntibioticRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_Antibiotic = ((Form_HAI_AntibioticDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sDescription {
                get {
                    return ((string)(this[this.tableForm_HAI_Antibiotic.sDescriptionColumn]));
                }
                set {
                    this[this.tableForm_HAI_Antibiotic.sDescriptionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_BundleComplianceRow : global::System.Data.DataRow {
            
            private Form_HAI_BundleComplianceDataTable tableForm_HAI_BundleCompliance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_BundleComplianceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_BundleCompliance = ((Form_HAI_BundleComplianceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_BundleCompliance.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_BundleCompliance.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sRelatedHighRiskProcedures {
                get {
                    return ((string)(this[this.tableForm_HAI_BundleCompliance.sRelatedHighRiskProceduresColumn]));
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.sRelatedHighRiskProceduresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionTypeID {
                get {
                    return ((int)(this[this.tableForm_HAI_BundleCompliance.fkiInfectionTypeIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.fkiInfectionTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InfectionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BundleCompliance.InfectionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InfectionTypeName\' in table \'Form_HAI_BundleCompliance\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.InfectionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiBundleComplianceID {
                get {
                    return ((int)(this[this.tableForm_HAI_BundleCompliance.fkiBundleComplianceIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.fkiBundleComplianceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sDescription {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BundleCompliance.sDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sDescription\' in table \'Form_HAI_BundleCompliance\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.sDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sInfectionDays {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BundleCompliance.sInfectionDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sInfectionDays\' in table \'Form_HAI_BundleCompliance\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.sInfectionDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiBundleItemTypeID {
                get {
                    try {
                        return ((int)(this[this.tableForm_HAI_BundleCompliance.fkiBundleItemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fkiBundleItemTypeID\' in table \'Form_HAI_BundleCompliance\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.fkiBundleItemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BundleItemTypeName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_BundleCompliance.BundleItemTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BundleItemTypeName\' in table \'Form_HAI_BundleCompliance\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.BundleItemTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool bSelected {
                get {
                    try {
                        return ((bool)(this[this.tableForm_HAI_BundleCompliance.bSelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bSelected\' in table \'Form_HAI_BundleCompliance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_BundleCompliance.bSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInfectionTypeNameNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.InfectionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInfectionTypeNameNull() {
                this[this.tableForm_HAI_BundleCompliance.InfectionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssDescriptionNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.sDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsDescriptionNull() {
                this[this.tableForm_HAI_BundleCompliance.sDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssInfectionDaysNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.sInfectionDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsInfectionDaysNull() {
                this[this.tableForm_HAI_BundleCompliance.sInfectionDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfkiBundleItemTypeIDNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.fkiBundleItemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfkiBundleItemTypeIDNull() {
                this[this.tableForm_HAI_BundleCompliance.fkiBundleItemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBundleItemTypeNameNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.BundleItemTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBundleItemTypeNameNull() {
                this[this.tableForm_HAI_BundleCompliance.BundleItemTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbSelectedNull() {
                return this.IsNull(this.tableForm_HAI_BundleCompliance.bSelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbSelectedNull() {
                this[this.tableForm_HAI_BundleCompliance.bSelectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_ReportableDiseasesRow : global::System.Data.DataRow {
            
            private Form_HAI_ReportableDiseasesDataTable tableForm_HAI_ReportableDiseases;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_ReportableDiseasesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_ReportableDiseases = ((Form_HAI_ReportableDiseasesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_ReportableDiseases.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_ReportableDiseases.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sReportedToDepartment {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_ReportableDiseases.sReportedToDepartmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sReportedToDepartment\' in table \'Form_HAI_ReportableDisease" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.sReportedToDepartmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiseaseName {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_ReportableDiseases.DiseaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiseaseName\' in table \'Form_HAI_ReportableDiseases\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.DiseaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sDateReported {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableForm_HAI_ReportableDiseases.sDateReportedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sDateReported\' in table \'Form_HAI_ReportableDiseases\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.sDateReportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sReferenceNumber {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_ReportableDiseases.sReferenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sReferenceNumber\' in table \'Form_HAI_ReportableDiseases\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_ReportableDiseases.sReferenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssReportedToDepartmentNull() {
                return this.IsNull(this.tableForm_HAI_ReportableDiseases.sReportedToDepartmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsReportedToDepartmentNull() {
                this[this.tableForm_HAI_ReportableDiseases.sReportedToDepartmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiseaseNameNull() {
                return this.IsNull(this.tableForm_HAI_ReportableDiseases.DiseaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiseaseNameNull() {
                this[this.tableForm_HAI_ReportableDiseases.DiseaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssDateReportedNull() {
                return this.IsNull(this.tableForm_HAI_ReportableDiseases.sDateReportedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsDateReportedNull() {
                this[this.tableForm_HAI_ReportableDiseases.sDateReportedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssReferenceNumberNull() {
                return this.IsNull(this.tableForm_HAI_ReportableDiseases.sReferenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsReferenceNumberNull() {
                this[this.tableForm_HAI_ReportableDiseases.sReferenceNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_LabReportsRow : global::System.Data.DataRow {
            
            private Form_HAI_LabReportsDataTable tableForm_HAI_LabReports;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_LabReportsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_LabReports = ((Form_HAI_LabReportsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_LabReports.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_LabReports.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_LabReports.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_LabReports.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sLabDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableForm_HAI_LabReports.sLabDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sLabDate\' in table \'Form_HAI_LabReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_LabReports.sLabDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sSpecimen {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_LabReports.sSpecimenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSpecimen\' in table \'Form_HAI_LabReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_LabReports.sSpecimenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sOrganism {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_LabReports.sOrganismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sOrganism\' in table \'Form_HAI_LabReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_LabReports.sOrganismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sLabNumber {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_LabReports.sLabNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sLabNumber\' in table \'Form_HAI_LabReports\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_LabReports.sLabNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssLabDateNull() {
                return this.IsNull(this.tableForm_HAI_LabReports.sLabDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsLabDateNull() {
                this[this.tableForm_HAI_LabReports.sLabDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSpecimenNull() {
                return this.IsNull(this.tableForm_HAI_LabReports.sSpecimenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSpecimenNull() {
                this[this.tableForm_HAI_LabReports.sSpecimenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssOrganismNull() {
                return this.IsNull(this.tableForm_HAI_LabReports.sOrganismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsOrganismNull() {
                this[this.tableForm_HAI_LabReports.sOrganismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssLabNumberNull() {
                return this.IsNull(this.tableForm_HAI_LabReports.sLabNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsLabNumberNull() {
                this[this.tableForm_HAI_LabReports.sLabNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Form_HAI_SurgeryDetailsRow : global::System.Data.DataRow {
            
            private Form_HAI_SurgeryDetailsDataTable tableForm_HAI_SurgeryDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Form_HAI_SurgeryDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForm_HAI_SurgeryDetails = ((Form_HAI_SurgeryDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int fkiInfectionFormID {
                get {
                    return ((int)(this[this.tableForm_HAI_SurgeryDetails.fkiInfectionFormIDColumn]));
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.fkiInfectionFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int iSiteNumber {
                get {
                    return ((int)(this[this.tableForm_HAI_SurgeryDetails.iSiteNumberColumn]));
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.iSiteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sFacility {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sFacilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sFacility\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sFacilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sVisitNumber {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sVisitNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sVisitNumber\' in table \'Form_HAI_SurgeryDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sVisitNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sProcedure {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sProcedureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sProcedure\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sProcedureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime sSurgeryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableForm_HAI_SurgeryDetails.sSurgeryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSurgeryDate\' in table \'Form_HAI_SurgeryDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sSurgeryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sSurgeryDuration {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sSurgeryDurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSurgeryDuration\' in table \'Form_HAI_SurgeryDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sSurgeryDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sTheatreInvoice {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sTheatreInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sTheatreInvoice\' in table \'Form_HAI_SurgeryDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sTheatreInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sTheatre {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sTheatreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sTheatre\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sTheatreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sSurgeon {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sSurgeonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sSurgeon\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sSurgeonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sAssistant {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sAssistantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sAssistant\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sAssistantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sScrubNurse {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sScrubNurseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sScrubNurse\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sScrubNurseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sAnaesthesist {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sAnaesthesistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sAnaesthesist\' in table \'Form_HAI_SurgeryDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sAnaesthesistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sWound {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sWoundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sWound\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sWoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sCategory {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sCategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sCategory\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sCategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sFinalDiagnosis {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sFinalDiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sFinalDiagnosis\' in table \'Form_HAI_SurgeryDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sFinalDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sAdmissionDate {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sAdmissionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sAdmissionDate\' in table \'Form_HAI_SurgeryDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sAdmissionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sDischargeDate {
                get {
                    try {
                        return ((string)(this[this.tableForm_HAI_SurgeryDetails.sDischargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sDischargeDate\' in table \'Form_HAI_SurgeryDetails\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.sDischargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool bSelected {
                get {
                    try {
                        return ((bool)(this[this.tableForm_HAI_SurgeryDetails.bSelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bSelected\' in table \'Form_HAI_SurgeryDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForm_HAI_SurgeryDetails.bSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssFacilityNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sFacilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsFacilityNull() {
                this[this.tableForm_HAI_SurgeryDetails.sFacilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssVisitNumberNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sVisitNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsVisitNumberNull() {
                this[this.tableForm_HAI_SurgeryDetails.sVisitNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssProcedureNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sProcedureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsProcedureNull() {
                this[this.tableForm_HAI_SurgeryDetails.sProcedureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSurgeryDateNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sSurgeryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSurgeryDateNull() {
                this[this.tableForm_HAI_SurgeryDetails.sSurgeryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSurgeryDurationNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sSurgeryDurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSurgeryDurationNull() {
                this[this.tableForm_HAI_SurgeryDetails.sSurgeryDurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssTheatreInvoiceNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sTheatreInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsTheatreInvoiceNull() {
                this[this.tableForm_HAI_SurgeryDetails.sTheatreInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssTheatreNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sTheatreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsTheatreNull() {
                this[this.tableForm_HAI_SurgeryDetails.sTheatreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssSurgeonNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sSurgeonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsSurgeonNull() {
                this[this.tableForm_HAI_SurgeryDetails.sSurgeonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssAssistantNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sAssistantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsAssistantNull() {
                this[this.tableForm_HAI_SurgeryDetails.sAssistantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssScrubNurseNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sScrubNurseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsScrubNurseNull() {
                this[this.tableForm_HAI_SurgeryDetails.sScrubNurseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssAnaesthesistNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sAnaesthesistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsAnaesthesistNull() {
                this[this.tableForm_HAI_SurgeryDetails.sAnaesthesistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssWoundNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sWoundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsWoundNull() {
                this[this.tableForm_HAI_SurgeryDetails.sWoundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssCategoryNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sCategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsCategoryNull() {
                this[this.tableForm_HAI_SurgeryDetails.sCategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssFinalDiagnosisNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sFinalDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsFinalDiagnosisNull() {
                this[this.tableForm_HAI_SurgeryDetails.sFinalDiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssAdmissionDateNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sAdmissionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsAdmissionDateNull() {
                this[this.tableForm_HAI_SurgeryDetails.sAdmissionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssDischargeDateNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.sDischargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsDischargeDateNull() {
                this[this.tableForm_HAI_SurgeryDetails.sDischargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbSelectedNull() {
                return this.IsNull(this.tableForm_HAI_SurgeryDetails.bSelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbSelectedNull() {
                this[this.tableForm_HAI_SurgeryDetails.bSelectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_HeaderRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_HeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderRowChangeEvent(Form_HAI_HeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_SiteRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_SiteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteRowChangeEvent(Form_HAI_SiteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SiteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_InfectionDetailRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_InfectionDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailRowChangeEvent(Form_HAI_InfectionDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_InfectionDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_PredisposingConditionRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_PredisposingConditionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionRowChangeEvent(Form_HAI_PredisposingConditionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_PredisposingConditionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_BedHistoryRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_BedHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryRowChangeEvent(Form_HAI_BedHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BedHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_TPN_ENTRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_TPN_ENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTRowChangeEvent(Form_HAI_TPN_ENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_TPN_ENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_AntibioticRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_AntibioticRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticRowChangeEvent(Form_HAI_AntibioticRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_AntibioticRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_BundleComplianceRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_BundleComplianceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceRowChangeEvent(Form_HAI_BundleComplianceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_BundleComplianceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_ReportableDiseasesRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_ReportableDiseasesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesRowChangeEvent(Form_HAI_ReportableDiseasesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_ReportableDiseasesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_LabReportsRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_LabReportsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsRowChangeEvent(Form_HAI_LabReportsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_LabReportsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Form_HAI_SurgeryDetailsRowChangeEvent : global::System.EventArgs {
            
            private Form_HAI_SurgeryDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsRowChangeEvent(Form_HAI_SurgeryDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Form_HAI_SurgeryDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace InfoQuestForm.App_Print.DataSets.DataSet_Form_HAI_SiteTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_HeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_HeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_Header";
            tableMapping.ColumnMappings.Add("FacilityDisplayName", "FacilityDisplayName");
            tableMapping.ColumnMappings.Add("sReportNumber", "sReportNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"
                      SELECT DISTINCT vAdministration_Facility_All.Facility_FacilityDisplayName AS FacilityDisplayName , tblInfectionPrevention.sReportNumber
                      FROM tblInfectionPrevention , vAdministration_Facility_All
                      WHERE
                      tblInfectionPrevention.fkiFacilityID = vAdministration_Facility_All.Facility_Id
                      AND (pkiInfectionFormID = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_HeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_HeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_HeaderDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_HeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_SiteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_SiteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_Site";
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT iSiteNumber\r\nFROM         tblInfectionPrevention_Site\r\nWHERE     " +
                "(fkiInfectionFormID = 1) AND ( iSiteNumber = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_SiteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_SiteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_SiteDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_SiteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_InfectionDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_InfectionDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_InfectionDetail";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("fkiFacilityUnitID", "fkiFacilityUnitID");
            tableMapping.ColumnMappings.Add("Unit_Name", "Unit_Name");
            tableMapping.ColumnMappings.Add("dtReported", "dtReported");
            tableMapping.ColumnMappings.Add("fkiInfectionTypeID", "fkiInfectionTypeID");
            tableMapping.ColumnMappings.Add("InfectionTypeName", "InfectionTypeName");
            tableMapping.ColumnMappings.Add("fkiInfectionSubTypeID", "fkiInfectionSubTypeID");
            tableMapping.ColumnMappings.Add("InfectionSubTypeName", "InfectionSubTypeName");
            tableMapping.ColumnMappings.Add("fkiSeverityTypeID", "fkiSeverityTypeID");
            tableMapping.ColumnMappings.Add("sDescription", "sDescription");
            tableMapping.ColumnMappings.Add("InfectionPrevention_SiteDescription", "InfectionPrevention_SiteDescription");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\n                      SELECT DISTINCT\r\n                      tblInfectionPreven" +
                "tion_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber, tblInfect" +
                "ionPrevention_Site.fkiFacilityUnitID,\r\n                      Administration_Unit" +
                ".Unit_Name, tblInfectionPrevention_Site.dtReported, tblInfectionPrevention_Site." +
                "fkiInfectionTypeID,\r\n                      vAdministration_ListItem_Active_1.Lis" +
                "tItem_Name AS InfectionTypeName, tblInfectionPrevention_Site.fkiInfectionSubType" +
                "ID, vAdministration_ListItem_Active.ListItem_Name AS InfectionSubTypeName,\r\n    " +
                "                  tblInfectionPrevention_Site.fkiSeverityTypeID, tblSeverityType" +
                ".sDescription, tblInfectionPrevention_Site.sDescription AS InfectionPrevention_S" +
                "iteDescription\r\n                      FROM         vAdministration_ListItem_Acti" +
                "ve AS vAdministration_ListItem_Active_1 RIGHT OUTER JOIN\r\n                      " +
                "tblInfectionPrevention_Site ON vAdministration_ListItem_Active_1.ListItem_Id = t" +
                "blInfectionPrevention_Site.fkiInfectionTypeID LEFT OUTER JOIN\r\n                 " +
                "     tblSeverityType ON tblInfectionPrevention_Site.fkiSeverityTypeID = tblSever" +
                "ityType.pkiSeverityTypeID LEFT OUTER JOIN\r\n                      vAdministration" +
                "_ListItem_Active AS vAdministration_ListItem_Active ON tblInfectionPrevention_Si" +
                "te.fkiInfectionSubTypeID = vAdministration_ListItem_Active.ListItem_Id LEFT OUTE" +
                "R JOIN\r\n                      Administration_Unit ON tblInfectionPrevention_Site" +
                ".fkiFacilityUnitID = Administration_Unit.Unit_Id\r\n                      WHERE   " +
                "  (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPreventi" +
                "on_Site.iSiteNumber = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_InfectionDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_InfectionDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_InfectionDetailDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_InfectionDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_PredisposingConditionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_PredisposingConditionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_PredisposingCondition";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("fkiConditionID", "fkiConditionID");
            tableMapping.ColumnMappings.Add("PredisposingConditonName", "PredisposingConditonName");
            tableMapping.ColumnMappings.Add("PredisposingConditionsDescription", "PredisposingConditionsDescription");
            tableMapping.ColumnMappings.Add("bSelected", "bSelected");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"
                      SELECT DISTINCT
                      tblInfectionPrevention_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber,
                      tblInfectionPrevention_Site_PredisposingCondition.fkiConditionID, vAdministration_ListItem_Active.ListItem_Name AS PredisposingConditonName,
                      tblInfectionPrevention_Site_PredisposingCondition.sDescription AS PredisposingConditionsDescription,
                      tblInfectionPrevention_Site_PredisposingCondition.bSelected
                      FROM         tblInfectionPrevention_Site LEFT OUTER JOIN
                      vAdministration_ListItem_Active AS vAdministration_ListItem_Active RIGHT OUTER JOIN
                      tblInfectionPrevention_Site_PredisposingCondition ON
                      vAdministration_ListItem_Active.ListItem_Id = tblInfectionPrevention_Site_PredisposingCondition.fkiConditionID ON
                      tblInfectionPrevention_Site.pkiSiteID = tblInfectionPrevention_Site_PredisposingCondition.fkiSiteID
                      WHERE     (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPrevention_Site.iSiteNumber = 1) AND
                      (tblInfectionPrevention_Site_PredisposingCondition.bSelected = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_PredisposingConditionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_PredisposingConditionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_PredisposingConditionDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_PredisposingConditionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_BedHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_BedHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_BedHistory";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("sFromUnit", "sFromUnit");
            tableMapping.ColumnMappings.Add("sToUnit", "sToUnit");
            tableMapping.ColumnMappings.Add("sDateTransferred", "sDateTransferred");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DISTINCT tblInfectionPrevention_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber, tblInfectionPrevention_Site_BedHistory.sFromUnit, tblInfectionPrevention_Site_BedHistory.sToUnit, CAST(tblInfectionPrevention_Site_BedHistory.sDateTransferred AS DATETIME) AS sDateTransferred FROM tblInfectionPrevention_Site LEFT OUTER JOIN tblInfectionPrevention_Site_BedHistory ON tblInfectionPrevention_Site.pkiSiteID = tblInfectionPrevention_Site_BedHistory.fkiSiteID WHERE (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPrevention_Site.iSiteNumber = 1) AND  (tblInfectionPrevention_Site_BedHistory.bSelected = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_BedHistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_BedHistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_BedHistoryDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_BedHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_TPN_ENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_TPN_ENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_TPN_ENT";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("sRelatedHighRiskProcedures", "sRelatedHighRiskProcedures");
            tableMapping.ColumnMappings.Add("TPN", "TPN");
            tableMapping.ColumnMappings.Add("ENT", "ENT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT fkiInfectionFormID, iSiteNumber 
sRelatedHighRiskProcedures,
CASE
	WHEN (CHARINDEX('TPN',sRelatedHighRiskProcedures,0)) > 0
		THEN 'Yes'
	WHEN (CHARINDEX('TPN',sRelatedHighRiskProcedures,0)) = 0
		THEN 'No'
END AS TPN,
CASE 
	WHEN (CHARINDEX('Enteral Feeding',sRelatedHighRiskProcedures,0)) > 0
                      THEN'Yes'
                      WHEN (CHARINDEX('Enteral Feeding',sRelatedHighRiskProcedures,0)) = 0
                      THEN 'No'
                      END AS ENT
                      FROM         vAdministration_ListItem_Active AS vAdministration_ListItem_Active_1 RIGHT OUTER JOIN
                      tblInfectionPrevention_Site ON vAdministration_ListItem_Active_1.ListItem_Id = tblInfectionPrevention_Site.fkiInfectionTypeID LEFT OUTER JOIN
                      tblSeverityType ON tblInfectionPrevention_Site.fkiSeverityTypeID = tblSeverityType.pkiSeverityTypeID LEFT OUTER JOIN
                      vAdministration_ListItem_Active AS vAdministration_ListItem_Active ON tblInfectionPrevention_Site.fkiInfectionSubTypeID = vAdministration_ListItem_Active.ListItem_Id LEFT OUTER JOIN
                      Administration_Unit ON tblInfectionPrevention_Site.fkiFacilityUnitID = Administration_Unit.Unit_Id
                      WHERE     (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPrevention_Site.iSiteNumber = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_TPN_ENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_TPN_ENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_TPN_ENTDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_TPN_ENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_AntibioticTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_AntibioticTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_Antibiotic";
            tableMapping.ColumnMappings.Add("sDescription", "sDescription");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT  sDescription FROM tblInfectionPrevention_Antibiotic\r\nWHERE fkiIn" +
                "fectionFormID = 1\r\nORDER BY sDescription";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_AntibioticDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_AntibioticDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_AntibioticDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_AntibioticDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_BundleComplianceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_BundleComplianceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_BundleCompliance";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("sRelatedHighRiskProcedures", "sRelatedHighRiskProcedures");
            tableMapping.ColumnMappings.Add("fkiInfectionTypeID", "fkiInfectionTypeID");
            tableMapping.ColumnMappings.Add("InfectionTypeName", "InfectionTypeName");
            tableMapping.ColumnMappings.Add("fkiBundleComplianceID", "fkiBundleComplianceID");
            tableMapping.ColumnMappings.Add("sDescription", "sDescription");
            tableMapping.ColumnMappings.Add("sInfectionDays", "sInfectionDays");
            tableMapping.ColumnMappings.Add("fkiBundleItemTypeID", "fkiBundleItemTypeID");
            tableMapping.ColumnMappings.Add("BundleItemTypeName", "BundleItemTypeName");
            tableMapping.ColumnMappings.Add("bSelected", "bSelected");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\n                      SELECT DISTINCT\r\n                      tblInfectionPreven" +
                "tion_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber,\r\n        " +
                "              tblInfectionPrevention_Site.sRelatedHighRiskProcedures, tblInfecti" +
                "onPrevention_Site.fkiInfectionTypeID, vAdministration_ListItem_Active_1.ListItem" +
                "_Name AS InfectionTypeName,\r\n                      tblInfectionPrevention_Site.f" +
                "kiBundleComplianceID, tblOveralBundleCompliance.sDescription, tblInfectionPreven" +
                "tion_Site.sInfectionDays,\r\n                      tblInfectionPrevention_Site_Bun" +
                "dleComplianceItem.fkiBundleItemTypeID, vAdministration_ListItem_Active.ListItem_" +
                "Name AS BundleItemTypeName,\r\n                      tblInfectionPrevention_Site_B" +
                "undleComplianceItem.bSelected\r\n                      FROM         vAdministratio" +
                "n_ListItem_Active AS vAdministration_ListItem_Active_1 RIGHT OUTER JOIN\r\n       " +
                "               tblInfectionPrevention_Site ON vAdministration_ListItem_Active_1." +
                "ListItem_Id = tblInfectionPrevention_Site.fkiInfectionTypeID LEFT OUTER JOIN\r\n  " +
                "                    tblOveralBundleCompliance ON\r\n                      tblInfec" +
                "tionPrevention_Site.fkiBundleComplianceID = tblOveralBundleCompliance.pkiBundleC" +
                "omplianceID LEFT OUTER JOIN\r\n                      vAdministration_ListItem_Acti" +
                "ve AS vAdministration_ListItem_Active RIGHT OUTER JOIN\r\n                      tb" +
                "lInfectionPrevention_Site_BundleComplianceItem ON\r\n                      vAdmini" +
                "stration_ListItem_Active.ListItem_Id = tblInfectionPrevention_Site_BundleComplia" +
                "nceItem.fkiBundleItemTypeID ON\r\n                      tblInfectionPrevention_Sit" +
                "e.pkiSiteID = tblInfectionPrevention_Site_BundleComplianceItem.fkiSiteID\r\n      " +
                "                WHERE     (tblInfectionPrevention_Site.fkiInfectionFormID = 1) A" +
                "ND (tblInfectionPrevention_Site.iSiteNumber = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_BundleComplianceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_BundleComplianceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_BundleComplianceDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_BundleComplianceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_ReportableDiseasesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_ReportableDiseasesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_ReportableDiseases";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("sReportedToDepartment", "sReportedToDepartment");
            tableMapping.ColumnMappings.Add("DiseaseName", "DiseaseName");
            tableMapping.ColumnMappings.Add("sDateReported", "sDateReported");
            tableMapping.ColumnMappings.Add("sReferenceNumber", "sReferenceNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DISTINCT tblInfectionPrevention_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber, tblInfectionPrevention_Site_ReportableDisease.sReportedToDepartment, vAdministration_ListItem_Active.ListItem_Name AS DiseaseName, CAST(tblInfectionPrevention_Site_ReportableDisease.sDateReported AS DATETIME) AS sDateReported, tblInfectionPrevention_Site_ReportableDisease.sReferenceNumber FROM tblInfectionPrevention_Site LEFT OUTER JOIN vAdministration_ListItem_Active AS vAdministration_ListItem_Active RIGHT OUTER JOIN tblInfectionPrevention_Site_ReportableDisease ON vAdministration_ListItem_Active.ListItem_Id = tblInfectionPrevention_Site_ReportableDisease.fkiDiseaseID ON tblInfectionPrevention_Site.pkiSiteID = tblInfectionPrevention_Site_ReportableDisease.fkiSiteID WHERE (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPrevention_Site.iSiteNumber = 1) AND (tblInfectionPrevention_Site_ReportableDisease.bSelected = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_ReportableDiseasesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_ReportableDiseasesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_ReportableDiseasesDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_ReportableDiseasesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_LabReportsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_LabReportsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_LabReports";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("sLabDate", "sLabDate");
            tableMapping.ColumnMappings.Add("sSpecimen", "sSpecimen");
            tableMapping.ColumnMappings.Add("sOrganism", "sOrganism");
            tableMapping.ColumnMappings.Add("sLabNumber", "sLabNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DISTINCT tblInfectionPrevention_Site.fkiInfectionFormID, tblInfectionPrevention_Site.iSiteNumber, CAST(tblInfectionPrevention_Site_LabReport.sLabDate AS DATETIME) AS sLabDate, tblInfectionPrevention_Site_LabReport.sSpecimen, tblInfectionPrevention_Site_LabReport.sOrganism, tblInfectionPrevention_Site_LabReport.sLabNumber FROM tblInfectionPrevention_Site LEFT OUTER JOIN tblInfectionPrevention_Site_LabReport ON tblInfectionPrevention_Site.pkiSiteID = tblInfectionPrevention_Site_LabReport.fkiSiteID WHERE (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInfectionPrevention_Site.iSiteNumber = 1) AND (tblInfectionPrevention_Site_LabReport.bSelected = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_LabReportsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_LabReportsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_LabReportsDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_LabReportsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Form_HAI_SurgeryDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Form_HAI_SurgeryDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Form_HAI_SurgeryDetails";
            tableMapping.ColumnMappings.Add("fkiInfectionFormID", "fkiInfectionFormID");
            tableMapping.ColumnMappings.Add("iSiteNumber", "iSiteNumber");
            tableMapping.ColumnMappings.Add("sFacility", "sFacility");
            tableMapping.ColumnMappings.Add("sVisitNumber", "sVisitNumber");
            tableMapping.ColumnMappings.Add("sProcedure", "sProcedure");
            tableMapping.ColumnMappings.Add("sSurgeryDate", "sSurgeryDate");
            tableMapping.ColumnMappings.Add("sSurgeryDuration", "sSurgeryDuration");
            tableMapping.ColumnMappings.Add("sTheatreInvoice", "sTheatreInvoice");
            tableMapping.ColumnMappings.Add("sTheatre", "sTheatre");
            tableMapping.ColumnMappings.Add("sSurgeon", "sSurgeon");
            tableMapping.ColumnMappings.Add("sAssistant", "sAssistant");
            tableMapping.ColumnMappings.Add("sScrubNurse", "sScrubNurse");
            tableMapping.ColumnMappings.Add("sAnaesthesist", "sAnaesthesist");
            tableMapping.ColumnMappings.Add("sWound", "sWound");
            tableMapping.ColumnMappings.Add("sCategory", "sCategory");
            tableMapping.ColumnMappings.Add("sFinalDiagnosis", "sFinalDiagnosis");
            tableMapping.ColumnMappings.Add("sAdmissionDate", "sAdmissionDate");
            tableMapping.ColumnMappings.Add("sDischargeDate", "sDischargeDate");
            tableMapping.ColumnMappings.Add("bSelected", "bSelected");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["InfoQuestMOSSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT tblInfectionPrevention_Site.fkiInfectionFormID, tblInfectionPreve" +
                "ntion_Site.iSiteNumber, CASE WHEN tblInfectionPrevention_Site_Surgery.sFacility " +
                "= \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Site_Surgery.sFacility <>" +
                " \'\' THEN tblInfectionPrevention_Site_Surgery.sFacility END AS sFacility, CASE WH" +
                "EN tblInfectionPrevention_Site_Surgery.sVisitNumber = \'\' THEN \'No Information\' W" +
                "HEN tblInfectionPrevention_Site_Surgery.sVisitNumber <> \'\' THEN tblInfectionPrev" +
                "ention_Site_Surgery.sVisitNumber END AS sVisitNumber, CASE WHEN tblInfectionPrev" +
                "ention_Site_Surgery.sProcedure = \'\' THEN \'No Information\' WHEN tblInfectionPreve" +
                "ntion_Site_Surgery.sProcedure <> \'\' THEN tblInfectionPrevention_Site_Surgery.sPr" +
                "ocedure END AS sProcedure, CASE WHEN tblInfectionPrevention_Site_Surgery.sSurger" +
                "yDate = \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Site_Surgery.sSurge" +
                "ryDate <> \'\' THEN CAST(tblInfectionPrevention_Site_Surgery.sSurgeryDate AS DATET" +
                "IME) END AS sSurgeryDate, CASE WHEN tblInfectionPrevention_Site_Surgery.sSurgery" +
                "Duration = \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Site_Surgery.sSu" +
                "rgeryDuration <> \'\' THEN tblInfectionPrevention_Site_Surgery.sSurgeryDuration EN" +
                "D AS sSurgeryDuration, CASE WHEN dbo.tblInfectionPrevention_Site_Surgery.sTheatr" +
                "eInvoice = \'\' THEN \'No Information\' WHEN dbo.tblInfectionPrevention_Site_Surgery" +
                ".sTheatreInvoice <> \'\' THEN dbo.tblInfectionPrevention_Site_Surgery.sTheatreInvo" +
                "ice END AS sTheatreInvoice, CASE WHEN tblInfectionPrevention_Site_Surgery.sTheat" +
                "re = \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Site_Surgery.sTheatre " +
                "<> \'\' THEN tblInfectionPrevention_Site_Surgery.sTheatre END AS sTheatre, CASE WH" +
                "EN tblInfectionPrevention_Site_Surgery.sSurgeon = \'\' THEN \'No Information\' WHEN " +
                "tblInfectionPrevention_Site_Surgery.sSurgeon <> \'\' THEN tblInfectionPrevention_S" +
                "ite_Surgery.sSurgeon END AS sSurgeon, CASE WHEN tblInfectionPrevention_Site_Surg" +
                "ery.sAssistant = \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Site_Surge" +
                "ry.sAssistant <> \'\' THEN tblInfectionPrevention_Site_Surgery.sAssistant END AS s" +
                "Assistant, CASE WHEN tblInfectionPrevention_Site_Surgery.sScrubNurse = \'\' THEN \'" +
                "No Information\' WHEN tblInfectionPrevention_Site_Surgery.sScrubNurse <> \'\' THEN " +
                "tblInfectionPrevention_Site_Surgery.sScrubNurse END AS sScrubNurse, CASE WHEN tb" +
                "lInfectionPrevention_Site_Surgery.sAnaesthesist = \'\' THEN \'No Information\' WHEN " +
                "tblInfectionPrevention_Site_Surgery.sAnaesthesist <> \'\' THEN tblInfectionPrevent" +
                "ion_Site_Surgery.sAnaesthesist END AS sAnaesthesist, CASE WHEN tblInfectionPreve" +
                "ntion_Site_Surgery.sWound = \'\' THEN \'No Information\' WHEN tblInfectionPrevention" +
                "_Site_Surgery.sWound <> \'\' THEN tblInfectionPrevention_Site_Surgery.sWound END A" +
                "S sWound, CASE WHEN tblInfectionPrevention_Site_Surgery.sCategory = \'\' THEN \'No " +
                "Information\' WHEN tblInfectionPrevention_Site_Surgery.sCategory <> \'\' THEN tblIn" +
                "fectionPrevention_Site_Surgery.sCategory END AS sCategory, CASE WHEN tblInfectio" +
                "nPrevention_Site_Surgery.sFinalDiagnosis = \'\' THEN \'No Information\' WHEN tblInfe" +
                "ctionPrevention_Site_Surgery.sFinalDiagnosis <> \'\' THEN tblInfectionPrevention_S" +
                "ite_Surgery.sFinalDiagnosis END AS sFinalDiagnosis, CASE WHEN tblInfectionPreven" +
                "tion_Site_Surgery.sAdmissionDate = \'\' THEN \'No Information\' WHEN tblInfectionPre" +
                "vention_Site_Surgery.sAdmissionDate <> \'\' THEN tblInfectionPrevention_Site_Surge" +
                "ry.sAdmissionDate END AS sAdmissionDate, CASE WHEN tblInfectionPrevention_Site_S" +
                "urgery.sDischargeDate = \'\' THEN \'No Information\' WHEN tblInfectionPrevention_Sit" +
                "e_Surgery.sDischargeDate <> \'\' THEN tblInfectionPrevention_Site_Surgery.sDischar" +
                "geDate END AS sDischargeDate, tblInfectionPrevention_Site_Surgery.bSelected FROM" +
                " tblInfectionPrevention_Site LEFT OUTER JOIN tblInfectionPrevention_Site_Surgery" +
                " ON tblInfectionPrevention_Site.pkiSiteID = tblInfectionPrevention_Site_Surgery." +
                "fkiSiteID WHERE (tblInfectionPrevention_Site.fkiInfectionFormID = 1) AND (tblInf" +
                "ectionPrevention_Site_Surgery.bSelected = 1) AND (tblInfectionPrevention_Site.iS" +
                "iteNumber = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet_Form_HAI_Site.Form_HAI_SurgeryDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet_Form_HAI_Site.Form_HAI_SurgeryDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet_Form_HAI_Site.Form_HAI_SurgeryDetailsDataTable dataTable = new DataSet_Form_HAI_Site.Form_HAI_SurgeryDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591